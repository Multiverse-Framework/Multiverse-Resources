#usda 1.0
(
    defaultPrim = "isr_testbed"
    metersPerUnit = 1
    upAxis = "Z"
)

def Urdf "urdf"
{
    string urdf:name = "isr_testbed"

    def UrdfRobot "robot"
    {
        def UrdfMaterial "materials"
        {
        }
    }
}

def Xform "isr_testbed" (
    prepend apiSchemas = ["MujocoBodyAPI"]
)
{
    point3f mujoco:body:pos = (0, 0, 0)
    quatf mujoco:body:quat = (1, 0, 0, 0)

    def Xform "walls" (
        prepend apiSchemas = ["UrdfLinkAPI", "MujocoBodyAPI"]
    )
    {
        point3f mujoco:body:pos = (0.49183, 0.433522, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.49183, 0.433522, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Xform "walls__walls__Door_4" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (10.0316, 804.378, 807.07776)
            float mujoco:body:inertial:mass = 54.36
            point3f mujoco:body:inertial:pos = (-0.44425, -3.76409, 0.6)
            quatf mujoco:body:inertial:quat = (0.55791414, 0.49685895, 0.51525164, 0.41997474)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (-0.44425, -3.76409, 0.6)
            float3 physics:diagonalInertia = (10.0316, 804.378, 807.07776)
            float physics:mass = 54.36
            quatf physics:principalAxes = (0.55791414, 0.49685895, 0.51525164, 0.41997474)
            float urdf:link:inertial:inertia:ixx = 10.0316
            float urdf:link:inertial:inertia:iyy = 804.378
            float urdf:link:inertial:inertia:izz = 807.07776
            float urdf:link:inertial:mass = 54.36
            float3 urdf:link:inertial:origin:rpy = (1.5958177, 0.15825567, 1.4527771)
            point3f urdf:link:inertial:origin:xyz = (-0.44425, -3.76409, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Door_4_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (-0.44425, -3.76409, 0.6)
                quatf mujoco:geom:quat = (0.9999999, 0, 0, -0.00048)
                vector3f mujoco:geom:size = (0.453, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, -0.00096)
                point3f urdf:collision:origin:xyz = (-0.44425, -3.76409, 0.6)
                float3 urdf:geometry:box:size = (0.906, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (0.452999791257616, -0.00043487993320243514, 0, 0), (0.000023999996313600172, 0.024999988480000887, 0, 0), (0, 0, 0.6, 0), (-0.44425, -3.76409, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_19" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (15.639325, 964.9898, 969.0312)
            float mujoco:body:inertial:mass = 95
            point3f mujoco:body:inertial:pos = (-2.66199, 1.59399, 0.5)
            quatf mujoco:body:inertial:quat = (0.8592931, 0.43427384, -0.043483764, -0.2667036)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (-2.66199, 1.59399, 0.5)
            float3 physics:diagonalInertia = (15.639325, 964.9898, 969.0312)
            float physics:mass = 95
            quatf physics:principalAxes = (0.8592931, 0.43427384, -0.043483764, -0.2667036)
            float urdf:link:inertial:inertia:ixx = 15.639325
            float urdf:link:inertial:inertia:iyy = 964.9898
            float urdf:link:inertial:inertia:izz = 969.0312
            float urdf:link:inertial:mass = 95
            float3 urdf:link:inertial:origin:rpy = (0.8933627, 0.15756536, -0.5263072)
            point3f urdf:link:inertial:origin:xyz = (-2.66199, 1.59399, 0.5)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_19_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (-2.66199, 1.59399, 0.5)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (0.95, 0.025, 0.5)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (-2.66199, 1.59399, 0.5)
                float3 urdf:geometry:box:size = (1.9, 0.05, 1)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (0.95, 0, 0, 0), (0, 0.025, 0, 0), (0, 0, 0.5, 0), (-2.66199, 1.59399, 0.5, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_21" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (64.939804, 3136.5864, 3171.0286)
            float mujoco:body:inertial:mass = 129
            point3f mujoco:body:inertial:pos = (-0.022, -4.882, 0.6)
            quatf mujoco:body:inertial:quat = (-0.7041721, 0.043235954, 0.043605585, 0.70736897)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (-0.022, -4.882, 0.6)
            float3 physics:diagonalInertia = (64.939804, 3136.5864, 3171.0286)
            float physics:mass = 129
            quatf physics:principalAxes = (-0.7041721, 0.043235954, 0.043605585, 0.70736897)
            float urdf:link:inertial:inertia:ixx = 64.939804
            float urdf:link:inertial:inertia:iyy = 3136.5864
            float urdf:link:inertial:inertia:izz = 3171.0286
            float urdf:link:inertial:mass = 129
            float3 urdf:link:inertial:origin:rpy = (0.00080544647, -0.12288828, -1.5753756)
            point3f urdf:link:inertial:origin:xyz = (-0.022, -4.882, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_21_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (-0.022, -4.882, 0.6)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1.075, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (-0.022, -4.882, 0.6)
                float3 urdf:geometry:box:size = (2.15, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1.075, 0, 0, 0), (0, 0.025, 0, 0), (0, 0, 0.6, 0), (-0.022, -4.882, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_22" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (10.791659, 1400.2637, 1405.9973)
            float mujoco:body:inertial:mass = 69
            point3f mujoco:body:inertial:pos = (1.028, -4.332, 0.6)
            quatf mujoco:body:inertial:quat = (0.49037546, 0.3793216, 0.5609001, 0.5486694)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (1.028, -4.332, 0.6)
            float3 physics:diagonalInertia = (10.791659, 1400.2637, 1405.9973)
            float physics:mass = 69
            quatf physics:principalAxes = (0.49037546, 0.3793216, 0.5609001, 0.5486694)
            float urdf:link:inertial:inertia:ixx = 10.791659
            float urdf:link:inertial:inertia:iyy = 1400.2637
            float urdf:link:inertial:inertia:izz = 1405.9973
            float urdf:link:inertial:mass = 69
            float3 urdf:link:inertial:origin:rpy = (1.4869318, 0.13426198, 1.8063635)
            point3f urdf:link:inertial:origin:xyz = (1.028, -4.332, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_22_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (1.028, -4.332, 0.6)
                quatf mujoco:geom:quat = (0.70710546, 0, 0, 0.7071081)
                vector3f mujoco:geom:size = (0.575, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 1.5708)
                point3f urdf:collision:origin:xyz = (1.028, -4.332, 0.6)
                float3 urdf:geometry:box:size = (1.15, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.0000021120929343365623, 0.5749999999961208, 0, 0), (-0.024999999999831345, -9.183012757985055e-8, 0, 0), (0, 0, 0.6, 0), (1.028, -4.332, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_23" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (53.40257, 2475.4648, 2498.7852)
            float mujoco:body:inertial:mass = 129
            point3f mujoco:body:inertial:pos = (2.078, -3.782, 0.6)
            quatf mujoco:body:inertial:quat = (0.85688394, -0.08926456, -0.027664201, -0.50696784)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (2.078, -3.782, 0.6)
            float3 physics:diagonalInertia = (53.40257, 2475.4648, 2498.7852)
            float physics:mass = 129
            quatf physics:principalAxes = (0.85688394, -0.08926456, -0.027664201, -0.50696784)
            float urdf:link:inertial:inertia:ixx = 53.40257
            float urdf:link:inertial:inertia:iyy = 2475.4648
            float urdf:link:inertial:inertia:izz = 2498.7852
            float urdf:link:inertial:mass = 129
            float3 urdf:link:inertial:origin:rpy = (-0.1264713, -0.13835956, -1.0597265)
            point3f urdf:link:inertial:origin:xyz = (2.078, -3.782, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_23_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (2.078, -3.782, 0.6)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1.075, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (2.078, -3.782, 0.6)
                float3 urdf:geometry:box:size = (2.15, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1.075, 0, 0, 0), (0, 0.025, 0, 0), (0, 0, 0.6, 0), (2.078, -3.782, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_24" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (8.335032, 1428.355, 1436.5562)
            float mujoco:body:inertial:mass = 69
            point3f mujoco:body:inertial:pos = (3.128, -3.232, 0.6)
            quatf mujoco:body:inertial:quat = (0.31952143, 0.23038723, 0.6647293, 0.63479346)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (3.128, -3.232, 0.6)
            float3 physics:diagonalInertia = (8.335032, 1428.355, 1436.5562)
            float physics:mass = 69
            quatf physics:principalAxes = (0.31952143, 0.23038723, 0.6647293, 0.63479346)
            float urdf:link:inertial:inertia:ixx = 8.335032
            float urdf:link:inertial:inertia:iyy = 1428.355
            float urdf:link:inertial:inertia:izz = 1436.5562
            float urdf:link:inertial:mass = 69
            float3 urdf:link:inertial:origin:rpy = (1.5605931, 0.13268286, 2.340289)
            point3f urdf:link:inertial:origin:xyz = (3.128, -3.232, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_24_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (3.128, -3.232, 0.6)
                quatf mujoco:geom:quat = (0.70710546, 0, 0, 0.7071081)
                vector3f mujoco:geom:size = (0.575, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 1.5708)
                point3f urdf:collision:origin:xyz = (3.128, -3.232, 0.6)
                float3 urdf:geometry:box:size = (1.15, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.0000021120929343365623, 0.5749999999961208, 0, 0), (-0.024999999999831345, -9.183012757985055e-8, 0, 0), (0, 0, 0.6, 0), (3.128, -3.232, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_25" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (5.13415, 754.3189, 758.40546)
            float mujoco:body:inertial:mass = 39
            point3f mujoco:body:inertial:pos = (3.428, -2.682, 0.6)
            quatf mujoco:body:inertial:quat = (-0.65870893, 0.67560387, -0.18054819, 0.27760473)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (3.428, -2.682, 0.6)
            float3 physics:diagonalInertia = (5.13415, 754.3189, 758.40546)
            float physics:mass = 39
            quatf physics:principalAxes = (-0.65870893, 0.67560387, -0.18054819, 0.27760473)
            float urdf:link:inertial:inertia:ixx = 5.13415
            float urdf:link:inertial:inertia:iyy = 754.3189
            float urdf:link:inertial:inertia:izz = 758.40546
            float urdf:link:inertial:mass = 39
            float3 urdf:link:inertial:origin:rpy = (-1.5486615, -0.13767879, -0.66302514)
            point3f urdf:link:inertial:origin:xyz = (3.428, -2.682, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_25_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (3.428, -2.682, 0.6)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (0.325, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (3.428, -2.682, 0.6)
                float3 urdf:geometry:box:size = (0.65, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (0.325, 0, 0, 0), (0, 0.025, 0, 0), (0, 0, 0.6, 0), (3.428, -2.682, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_26" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (26.42141, 2009.6642, 2014.5795)
            float mujoco:body:inertial:mass = 114
            point3f mujoco:body:inertial:pos = (3.728, -1.757, 0.6)
            quatf mujoco:body:inertial:quat = (-0.4159853, 0.8790839, -0.1679737, 0.16109833)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (3.728, -1.757, 0.6)
            float3 physics:diagonalInertia = (26.42141, 2009.6642, 2014.5795)
            float physics:mass = 114
            quatf physics:principalAxes = (-0.4159853, 0.8790839, -0.1679737, 0.16109833)
            float urdf:link:inertial:inertia:ixx = 26.42141
            float urdf:link:inertial:inertia:iyy = 2009.6642
            float urdf:link:inertial:inertia:izz = 2014.5795
            float urdf:link:inertial:mass = 114
            float3 urdf:link:inertial:origin:rpy = (-2.2247157, -0.1439857, -0.44875532)
            point3f urdf:link:inertial:origin:xyz = (3.728, -1.757, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_26_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (3.728, -1.757, 0.6)
                quatf mujoco:geom:quat = (0.70710546, 0, 0, 0.7071081)
                vector3f mujoco:geom:size = (0.95, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 1.5708)
                point3f urdf:collision:origin:xyz = (3.728, -1.757, 0.6)
                float3 urdf:geometry:box:size = (1.9, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.0000034895448480343204, 0.949999999993591, 0, 0), (-0.024999999999831345, -9.183012757985055e-8, 0, 0), (0, 0, 0.6, 0), (3.728, -1.757, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_27" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (6.6146784, 649.69464, 655.86273)
            float mujoco:body:inertial:mass = 54
            point3f mujoco:body:inertial:pos = (3.303, -0.832, 0.6)
            quatf mujoco:body:inertial:quat = (0.6999917, -0.69828737, 0.023055559, -0.14790122)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (3.303, -0.832, 0.6)
            float3 physics:diagonalInertia = (6.6146784, 649.69464, 655.86273)
            float physics:mass = 54
            quatf physics:principalAxes = (0.6999917, -0.69828737, 0.023055559, -0.14790122)
            float urdf:link:inertial:inertia:ixx = 6.6146784
            float urdf:link:inertial:inertia:iyy = 649.69464
            float urdf:link:inertial:inertia:izz = 655.86273
            float urdf:link:inertial:mass = 54
            float3 urdf:link:inertial:origin:rpy = (-1.5466989, -0.17517221, -0.24543309)
            point3f urdf:link:inertial:origin:xyz = (3.303, -0.832, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_27_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (3.303, -0.832, 0.6)
                quatf mujoco:geom:quat = (0.0000013267949, 0, 0, 1)
                vector3f mujoco:geom:size = (0.45, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 3.14159)
                point3f urdf:collision:origin:xyz = (3.303, -0.832, 0.6)
                float3 urdf:geometry:box:size = (0.9, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.44999999999841567, 0.0000011941154070087285, 0, 0), (-6.633974483381825e-8, -0.02499999999991198, 0, 0), (0, 0, 0.6, 0), (3.303, -0.832, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_36" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (36.606228, 521.94147, 535.30365)
            float mujoco:body:inertial:mass = 114
            point3f mujoco:body:inertial:pos = (1.117, 1.66399, 0.6)
            quatf mujoco:body:inertial:quat = (-0.46763384, -0.040545616, -0.23409757, 0.8513947)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (1.117, 1.66399, 0.6)
            float3 physics:diagonalInertia = (36.606228, 521.94147, 535.30365)
            float physics:mass = 114
            quatf physics:principalAxes = (-0.46763384, -0.040545616, -0.23409757, 0.8513947)
            float urdf:link:inertial:inertia:ixx = 36.606228
            float urdf:link:inertial:inertia:iyy = 521.94147
            float urdf:link:inertial:inertia:izz = 535.30365
            float urdf:link:inertial:mass = 114
            float3 urdf:link:inertial:origin:rpy = (-0.38618252, 0.29212156, -2.1945603)
            point3f urdf:link:inertial:origin:xyz = (1.117, 1.66399, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_36_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (1.117, 1.66399, 0.6)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (0.95, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (1.117, 1.66399, 0.6)
                float3 urdf:geometry:box:size = (1.9, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (0.95, 0, 0, 0), (0, 0.025, 0, 0), (0, 0, 0.6, 0), (1.117, 1.66399, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_48" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (3199.313, 7730.9834, 10805.778)
            float mujoco:body:inertial:mass = 534.0006
            point3f mujoco:body:inertial:pos = (-3.58099, 0.669, 0.6)
            quatf mujoco:body:inertial:quat = (-0.036896873, 0.9963683, 0.0024616304, -0.07669905)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (-3.58099, 0.669, 0.6)
            float3 physics:diagonalInertia = (3199.313, 7730.9834, 10805.778)
            float physics:mass = 534.0006
            quatf physics:principalAxes = (-0.036896873, 0.9963683, 0.0024616304, -0.07669905)
            float urdf:link:inertial:inertia:ixx = 3199.313
            float urdf:link:inertial:inertia:iyy = 7730.9834
            float urdf:link:inertial:inertia:izz = 10805.778
            float urdf:link:inertial:mass = 534.0006
            float3 urdf:link:inertial:origin:rpy = (-3.066743, 0.1532586, 0.010690801)
            point3f urdf:link:inertial:origin:xyz = (-3.58099, 0.669, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_48_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (-3.58099, 0.669, 0.6)
                quatf mujoco:geom:quat = (0.706628, 0, 0, 0.7075852)
                vector3f mujoco:geom:size = (4.450005, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 1.57215)
                point3f urdf:collision:origin:xyz = (-3.58099, 0.669, 0.6)
                float3 urdf:geometry:box:size = (8.90001, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.006023850691360089, 4.450000922836741, 0, 0), (-0.024999977094614174, -0.0000338418197921131, 0, 0), (0, 0, 0.6, 0), (-3.58099, 0.669, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_49" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (504.08966, 7867.447, 8305.499)
            float mujoco:body:inertial:mass = 279
            point3f mujoco:body:inertial:pos = (-1.28699, 5.09399, 0.6)
            quatf mujoco:body:inertial:quat = (0.79197097, 0.047539506, 0.03515656, -0.6076891)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (-1.28699, 5.09399, 0.6)
            float3 physics:diagonalInertia = (504.08966, 7867.447, 8305.499)
            float physics:mass = 279
            quatf physics:principalAxes = (0.79197097, 0.047539506, 0.03515656, -0.6076891)
            float urdf:link:inertial:inertia:ixx = 504.08966
            float urdf:link:inertial:inertia:iyy = 7867.447
            float urdf:link:inertial:inertia:izz = 8305.499
            float urdf:link:inertial:mass = 279
            float3 urdf:link:inertial:origin:rpy = (0.032788888, 0.11370931, -1.3071121)
            point3f urdf:link:inertial:origin:xyz = (-1.28699, 5.09399, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_49_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (-1.28699, 5.09399, 0.6)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (2.325, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (-1.28699, 5.09399, 0.6)
                float3 urdf:geometry:box:size = (4.65, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (2.325, 0, 0, 0), (0, 0.025, 0, 0), (0, 0, 0.6, 0), (-1.28699, 5.09399, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_50" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (18.409515, 2479.285, 2497.6194)
            float mujoco:body:inertial:mass = 144
            point3f mujoco:body:inertial:pos = (1.01299, 3.91899, 0.6)
            quatf mujoco:body:inertial:quat = (0.473136, -0.3900817, 0.58729273, -0.52826685)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (1.01299, 3.91899, 0.6)
            float3 physics:diagonalInertia = (18.409515, 2479.285, 2497.6194)
            float physics:mass = 144
            quatf physics:principalAxes = (0.473136, -0.3900817, 0.58729273, -0.52826685)
            float urdf:link:inertial:inertia:ixx = 18.409515
            float urdf:link:inertial:inertia:iyy = 2479.285
            float urdf:link:inertial:inertia:izz = 2497.6194
            float urdf:link:inertial:mass = 144
            float3 urdf:link:inertial:origin:rpy = (-1.564888, 0.14410242, -1.8240489)
            point3f urdf:link:inertial:origin:xyz = (1.01299, 3.91899, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_50_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (1.01299, 3.91899, 0.6)
                quatf mujoco:geom:quat = (-0.70710546, 0, 0, 0.7071081)
                vector3f mujoco:geom:size = (1.2, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, -1.5708)
                point3f urdf:collision:origin:xyz = (1.01299, 3.91899, 0.6)
                float3 urdf:geometry:box:size = (2.4, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.000004407846123832826, -1.1999999999919044, 0, 0), (0.024999999999831345, -9.183012757985055e-8, 0, 0), (0, 0, 0.6, 0), (1.01299, 3.91899, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_51" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (9.684675, 448.62888, 451.36328)
            float mujoco:body:inertial:mass = 54
            point3f mujoco:body:inertial:pos = (0.588, 2.74399, 0.6)
            quatf mujoco:body:inertial:quat = (0.5109943, -0.36836794, 0.5798571, -0.51667744)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (0.588, 2.74399, 0.6)
            float3 physics:diagonalInertia = (9.684675, 448.62888, 451.36328)
            float physics:mass = 54
            quatf physics:principalAxes = (0.5109943, -0.36836794, 0.5798571, -0.51667744)
            float urdf:link:inertial:inertia:ixx = 9.684675
            float urdf:link:inertial:inertia:iyy = 448.62888
            float urdf:link:inertial:inertia:izz = 451.36328
            float urdf:link:inertial:mass = 54
            float3 urdf:link:inertial:origin:rpy = (-1.513318, 0.21357249, -1.783576)
            point3f urdf:link:inertial:origin:xyz = (0.588, 2.74399, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_51_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (0.588, 2.74399, 0.6)
                quatf mujoco:geom:quat = (0.0000013267949, 0, 0, 1)
                vector3f mujoco:geom:size = (0.45, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 3.14159)
                point3f urdf:collision:origin:xyz = (0.588, 2.74399, 0.6)
                float3 urdf:geometry:box:size = (0.9, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.44999999999841567, 0.0000011941154070087285, 0, 0), (-6.633974483381825e-8, -0.02499999999991198, 0, 0), (0, 0, 0.6, 0), (0.588, 2.74399, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_53" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (45.702522, 2531.8616, 2554.344)
            float mujoco:body:inertial:mass = 204
            point3f mujoco:body:inertial:pos = (-0.765, 3.24799, 0.6)
            quatf mujoco:body:inertial:quat = (0.50490516, 0.37802303, 0.35284603, 0.69113606)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (-0.765, 3.24799, 0.6)
            float3 physics:diagonalInertia = (45.702522, 2531.8616, 2554.344)
            float physics:mass = 204
            quatf physics:principalAxes = (0.50490516, 0.37802303, 0.35284603, 0.69113606)
            float urdf:link:inertial:inertia:ixx = 45.702522
            float urdf:link:inertial:inertia:iyy = 2531.8616
            float urdf:link:inertial:inertia:izz = 2554.344
            float urdf:link:inertial:mass = 204
            float3 urdf:link:inertial:origin:rpy = (1.079511, -0.16699827, 1.7795304)
            point3f urdf:link:inertial:origin:xyz = (-0.765, 3.24799, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_53_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (-0.765, 3.24799, 0.6)
                quatf mujoco:geom:quat = (0.70710546, 0, 0, 0.7071081)
                vector3f mujoco:geom:size = (1.7, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 1.5708)
                point3f urdf:collision:origin:xyz = (-0.765, 3.24799, 0.6)
                float3 urdf:geometry:box:size = (3.4, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.0000062444486754298366, 1.6999999999885314, 0, 0), (-0.024999999999831345, -9.183012757985055e-8, 0, 0), (0, 0, 0.6, 0), (-0.765, 3.24799, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_58" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (66.42959, 3373.2637, 3399.268)
            float mujoco:body:inertial:mass = 204
            point3f mujoco:body:inertial:pos = (2.042, 3.33899, 0.6)
            quatf mujoco:body:inertial:quat = (0.20206968, 0.8408446, 0.46167114, 0.19750437)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (2.042, 3.33899, 0.6)
            float3 physics:diagonalInertia = (66.42959, 3373.2637, 3399.268)
            float physics:mass = 204
            quatf physics:principalAxes = (0.20206968, 0.8408446, 0.46167114, 0.19750437)
            float urdf:link:inertial:inertia:ixx = 66.42959
            float urdf:link:inertial:inertia:iyy = 3373.2637
            float urdf:link:inertial:inertia:izz = 3399.268
            float urdf:link:inertial:mass = 204
            float3 urdf:link:inertial:origin:rpy = (2.5855796, -0.14608046, 1.0459962)
            point3f urdf:link:inertial:origin:xyz = (2.042, 3.33899, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_58_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (2.042, 3.33899, 0.6)
                quatf mujoco:geom:quat = (0.70710546, 0, 0, 0.7071081)
                vector3f mujoco:geom:size = (1.7, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 1.5708)
                point3f urdf:collision:origin:xyz = (2.042, 3.33899, 0.6)
                float3 urdf:geometry:box:size = (3.4, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.0000062444486754298366, 1.6999999999885314, 0, 0), (-0.024999999999831345, -9.183012757985055e-8, 0, 0), (0, 0, 0.6, 0), (2.042, 3.33899, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_61" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (86.7298, 3167.242, 3216.8616)
            float mujoco:body:inertial:mass = 159
            point3f mujoco:body:inertial:pos = (-2.27499, -3.756, 0.6)
            quatf mujoco:body:inertial:quat = (-0.48653126, 0.031293426, 0.082926884, 0.86915547)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (-2.27499, -3.756, 0.6)
            float3 physics:diagonalInertia = (86.7298, 3167.242, 3216.8616)
            float physics:mass = 159
            quatf physics:principalAxes = (-0.48653126, 0.031293426, 0.082926884, 0.86915547)
            float urdf:link:inertial:inertia:ixx = 86.7298
            float urdf:link:inertial:inertia:iyy = 3167.242
            float urdf:link:inertial:inertia:izz = 3216.8616
            float urdf:link:inertial:mass = 159
            float3 urdf:link:inertial:origin:rpy = (0.115007535, -0.13550505, -2.1287715)
            point3f urdf:link:inertial:origin:xyz = (-2.27499, -3.756, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_61_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (-2.27499, -3.756, 0.6)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1.325, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (-2.27499, -3.756, 0.6)
                float3 urdf:geometry:box:size = (2.65, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1.325, 0, 0, 0), (0, 0.025, 0, 0), (0, 0, 0.6, 0), (-2.27499, -3.756, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "walls__walls__Wall_63" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (194.31451, 1958.2252, 2105.7869)
            float mujoco:body:inertial:mass = 204
            point3f mujoco:body:inertial:pos = (2.878, 0.843, 0.6)
            quatf mujoco:body:inertial:quat = (0.98196334, -0.03027544, -0.10447939, 0.15464614)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (2.878, 0.843, 0.6)
            float3 physics:diagonalInertia = (194.31451, 1958.2252, 2105.7869)
            float physics:mass = 204
            quatf physics:principalAxes = (0.98196334, -0.03027544, -0.10447939, 0.15464614)
            float urdf:link:inertial:inertia:ixx = 194.31451
            float urdf:link:inertial:inertia:iyy = 1958.2252
            float urdf:link:inertial:inertia:izz = 2105.7869
            float urdf:link:inertial:mass = 204
            float3 urdf:link:inertial:origin:rpy = (-0.0937225, -0.19709958, 0.32168052)
            point3f urdf:link:inertial:origin:xyz = (2.878, 0.843, 0.6)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "walls__walls__Wall_63_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (2.878, 0.843, 0.6)
                quatf mujoco:geom:quat = (0.70710546, 0, 0, 0.7071081)
                vector3f mujoco:geom:size = (1.7, 0.025, 0.6)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, 1.5708)
                point3f urdf:collision:origin:xyz = (2.878, 0.843, 0.6)
                float3 urdf:geometry:box:size = (3.4, 0.05, 1.2)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.0000062444486754298366, 1.6999999999885314, 0, 0), (-0.024999999999831345, -9.183012757985055e-8, 0, 0), (0, 0, 0.6, 0), (2.878, 0.843, 0.6, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "wall" (
        prepend apiSchemas = ["UrdfLinkAPI", "MujocoBodyAPI"]
    )
    {
        point3f mujoco:body:pos = (-1.19, 1.86, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-1.19, 1.86, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Xform "wall__wall__Wall_0" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (110519.73, 682360.06, 786555.5)
            float mujoco:body:inertial:mass = 6187.5
            point3f mujoco:body:inertial:pos = (-9.98, 1.805, 1.25)
            quatf mujoco:body:inertial:quat = (0.98831296, -0.028961468, 0.062847205, -0.13582705)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (-9.98, 1.805, 1.25)
            float3 physics:diagonalInertia = (110519.73, 682360.06, 786555.5)
            float physics:mass = 6187.5
            quatf physics:principalAxes = (0.98831296, -0.028961468, 0.062847205, -0.13582705)
            float urdf:link:inertial:inertia:ixx = 110519.73
            float urdf:link:inertial:inertia:iyy = 682360.06
            float urdf:link:inertial:inertia:izz = 786555.5
            float urdf:link:inertial:mass = 6187.5
            float3 urdf:link:inertial:origin:rpy = (-0.07489696, 0.11662208, -0.2775296)
            point3f urdf:link:inertial:origin:xyz = (-9.98, 1.805, 1.25)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "wall__wall__Wall_0_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (-9.98, 1.805, 1.25)
                quatf mujoco:geom:quat = (-0.70710546, 0, 0, 0.7071081)
                vector3f mujoco:geom:size = (8.25, 0.075, 1.25)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, -1.5708)
                point3f urdf:collision:origin:xyz = (-9.98, 1.805, 1.25)
                float3 urdf:geometry:box:size = (16.5, 0.15, 2.5)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (-0.000030303942101350678, -8.249999999944343, 0, 0), (0.07499999999949403, -2.754903827395516e-7, 0, 0), (0, 0, 1.25, 0), (-9.98, 1.805, 1.25, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }

        def Xform "wall__wall__Wall_2" (
            prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (169540.44, 683876.3, 846656.5)
            float mujoco:body:inertial:mass = 6591.9
            point3f mujoco:body:inertial:pos = (-1.26581, 9.97568, 1.25)
            quatf mujoco:body:inertial:quat = (0.7619777, 0.047978573, 0.040265895, -0.64456713)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (-1.26581, 9.97568, 1.25)
            float3 physics:diagonalInertia = (169540.44, 683876.3, 846656.5)
            float physics:mass = 6591.9
            quatf physics:principalAxes = (0.7619777, 0.047978573, 0.040265895, -0.64456713)
            float urdf:link:inertial:inertia:ixx = 169540.44
            float urdf:link:inertial:inertia:iyy = 683876.3
            float urdf:link:inertial:inertia:izz = 846656.5
            float urdf:link:inertial:mass = 6591.9
            float3 urdf:link:inertial:origin:rpy = (0.021373535, 0.12352816, -1.4029118)
            point3f urdf:link:inertial:origin:xyz = (-1.26581, 9.97568, 1.25)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Cube "wall__wall__Wall_2_geom_collision_0" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
            )
            {
                float3[] extent = [(-1, -1, -1), (1, 1, 1)]
                point3f mujoco:geom:pos = (-1.26581, 9.97568, 1.25)
                quatf mujoco:geom:quat = (0.99999994, 0, 0, -0.000245)
                vector3f mujoco:geom:size = (8.7892, 0.075, 1.25)
                uniform token mujoco:geom:type = "box"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
                float[] primvars:displayOpacity = [0]
                float3 urdf:collision:origin:rpy = (0, 0, -0.00049)
                point3f urdf:collision:origin:xyz = (-1.26581, 9.97568, 1.25)
                float3 urdf:geometry:box:size = (17.5784, 0.15, 2.5)
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (8.78919894485656, -0.004306707827659903, 0, 0), (0.000036749998529387515, 0.07499999099625018, 0, 0), (0, 0, 1.25, 0), (-1.26581, 9.97568, 1.25, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "cone1__Construction_Cone__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000011387942, 0.000109284985, 0.000109284985)
        float mujoco:body:inertial:mass = 0.063306086
        point3f mujoco:body:inertial:pos = (-5.94, 2.97, 0.030226111)
        quatf mujoco:body:inertial:quat = (-0.57542765, 0.41095382, 0.57542765, 0.41095382)
        point3f mujoco:body:pos = (-5.94, 2.97, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-5.94, 2.97, 0.030226111)
        float3 physics:diagonalInertia = (0.000011387942, 0.000109284985, 0.000109284985)
        float physics:mass = 0.063306086
        quatf physics:principalAxes = (-0.57542765, 0.41095382, 0.57542765, 0.41095382)
        float urdf:link:inertial:inertia:ixx = 0.000011387942
        float urdf:link:inertial:inertia:iyy = 0.000109284985
        float urdf:link:inertial:inertia:izz = 0.000109284985
        float urdf:link:inertial:mass = 0.063306086
        float3 urdf:link:inertial:origin:rpy = (-1.2403473, -1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (-5.94, 2.97, 0.030226111)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-5.94, 2.97, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "cone1__Construction_Cone__link_geom_collision_0_construction_cone" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/construction_cone.usda@</construction_cone>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/construction_cone_10_0_10_0_10_0>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (10, 10, 10)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/construction_cone.stl@
            float3 urdf:geometry:mesh:scale = (10, 10, 10)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (10, 0, 0, 0), (0, 10, 0, 0), (0, 0, 10, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "cone2__Construction_Cone__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000011387942, 0.000109284985, 0.000109284985)
        float mujoco:body:inertial:mass = 0.063306086
        point3f mujoco:body:inertial:pos = (-4.54, 2.97, 0.030226111)
        quatf mujoco:body:inertial:quat = (-0.57542765, 0.41095382, 0.57542765, 0.41095382)
        point3f mujoco:body:pos = (-4.54, 2.97, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-4.54, 2.97, 0.030226111)
        float3 physics:diagonalInertia = (0.000011387942, 0.000109284985, 0.000109284985)
        float physics:mass = 0.063306086
        quatf physics:principalAxes = (-0.57542765, 0.41095382, 0.57542765, 0.41095382)
        float urdf:link:inertial:inertia:ixx = 0.000011387942
        float urdf:link:inertial:inertia:iyy = 0.000109284985
        float urdf:link:inertial:inertia:izz = 0.000109284985
        float urdf:link:inertial:mass = 0.063306086
        float3 urdf:link:inertial:origin:rpy = (-1.2403473, -1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (-4.54, 2.97, 0.030226111)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-4.54, 2.97, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "cone2__Construction_Cone__link_geom_collision_0_construction_cone" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/construction_cone.usda@</construction_cone>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/construction_cone_10_0_10_0_10_0>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (10, 10, 10)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/construction_cone.stl@
            float3 urdf:geometry:mesh:scale = (10, 10, 10)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (10, 0, 0, 0), (0, 10, 0, 0), (0, 0, 10, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "cone3__Construction_Cone__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000011387942, 0.000109284985, 0.000109284985)
        float mujoco:body:inertial:mass = 0.063306086
        point3f mujoco:body:inertial:pos = (3.03, 6.84, 0.030226111)
        quatf mujoco:body:inertial:quat = (-0.57542765, 0.41095382, 0.57542765, 0.41095382)
        point3f mujoco:body:pos = (3.03, 6.84, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (3.03, 6.84, 0.030226111)
        float3 physics:diagonalInertia = (0.000011387942, 0.000109284985, 0.000109284985)
        float physics:mass = 0.063306086
        quatf physics:principalAxes = (-0.57542765, 0.41095382, 0.57542765, 0.41095382)
        float urdf:link:inertial:inertia:ixx = 0.000011387942
        float urdf:link:inertial:inertia:iyy = 0.000109284985
        float urdf:link:inertial:inertia:izz = 0.000109284985
        float urdf:link:inertial:mass = 0.063306086
        float3 urdf:link:inertial:origin:rpy = (-1.2403473, -1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (3.03, 6.84, 0.030226111)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (3.03, 6.84, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "cone3__Construction_Cone__link_geom_collision_0_construction_cone" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/construction_cone.usda@</construction_cone>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/construction_cone_10_0_10_0_10_0>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (10, 10, 10)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/construction_cone.stl@
            float3 urdf:geometry:mesh:scale = (10, 10, 10)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (10, 0, 0, 0), (0, 10, 0, 0), (0, 0, 10, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "cone4__Construction_Cone__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000011387942, 0.000109284985, 0.000109284985)
        float mujoco:body:inertial:mass = 0.063306086
        point3f mujoco:body:inertial:pos = (3.03, 8.33, 0.030226111)
        quatf mujoco:body:inertial:quat = (-0.57542765, 0.41095382, 0.57542765, 0.41095382)
        point3f mujoco:body:pos = (3.03, 8.33, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (3.03, 8.33, 0.030226111)
        float3 physics:diagonalInertia = (0.000011387942, 0.000109284985, 0.000109284985)
        float physics:mass = 0.063306086
        quatf physics:principalAxes = (-0.57542765, 0.41095382, 0.57542765, 0.41095382)
        float urdf:link:inertial:inertia:ixx = 0.000011387942
        float urdf:link:inertial:inertia:iyy = 0.000109284985
        float urdf:link:inertial:inertia:izz = 0.000109284985
        float urdf:link:inertial:mass = 0.063306086
        float3 urdf:link:inertial:origin:rpy = (-1.2403473, -1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (3.03, 8.33, 0.030226111)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (3.03, 8.33, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "cone4__Construction_Cone__link_geom_collision_0_construction_cone" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/construction_cone.usda@</construction_cone>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/construction_cone_10_0_10_0_10_0>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (10, 10, 10)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/construction_cone.stl@
            float3 urdf:geometry:mesh:scale = (10, 10, 10)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (10, 0, 0, 0), (0, 10, 0, 0), (0, 0, 10, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "table_outside__cafe_table__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (4.708928, 8.308773, 8.308773)
        float mujoco:body:inertial:mass = 41.983517
        point3f mujoco:body:inertial:pos = (-5.25, 3.77, 0.3210187)
        quatf mujoco:body:inertial:quat = (0.70710677, 0, 0.70710677, 0)
        point3f mujoco:body:pos = (-5.25, 3.77, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-5.25, 3.77, 0.3210187)
        float3 physics:diagonalInertia = (4.708928, 8.308773, 8.308773)
        float physics:mass = 41.983517
        quatf physics:principalAxes = (0.70710677, 0, 0.70710677, 0)
        float urdf:link:inertial:inertia:ixx = 4.708928
        float urdf:link:inertial:inertia:iyy = 8.308773
        float urdf:link:inertial:inertia:izz = 8.308773
        float urdf:link:inertial:mass = 41.983517
        float3 urdf:link:inertial:origin:rpy = (-0, 1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (-5.25, 3.77, 0.3210187)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-5.25, 3.77, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "table_outside__cafe_table__link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.45)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.4565, 0.4565, 0.0175)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.45)
            float3 urdf:geometry:box:size = (0.913, 0.913, 0.035)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.4565, 0, 0, 0), (0, 0.4565, 0, 0), (0, 0, 0.0175, 0), (0, 0, 0.45, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "table_outside__cafe_table__link_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.37)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.021, 0.021, 0.075)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.37)
            float3 urdf:geometry:box:size = (0.042, 0.042, 0.15)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.021, 0, 0, 0), (0, 0.021, 0, 0), (0, 0, 0.075, 0), (0, 0, 0.37, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "table_outside__cafe_table__link_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.02)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.28, 0.28, 0.02)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.02)
            float3 urdf:geometry:box:size = (0.56, 0.56, 0.04)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.28, 0, 0, 0), (0, 0.28, 0, 0), (0, 0, 0.02, 0), (0, 0, 0.02, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "hydrant1__fire_hydrant__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.3782685, 8.444463, 8.449933)
        float mujoco:body:inertial:mass = 36.5994
        point3f mujoco:body:inertial:pos = (1.01, 9.439549, 0.40680945)
        quatf mujoco:body:inertial:quat = (0.49307263, 0.5068327, -0.5068296, 0.49307576)
        point3f mujoco:body:pos = (1.01, 9.45, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (1.01, 9.439549, 0.40680945)
        float3 physics:diagonalInertia = (0.3782685, 8.444463, 8.449933)
        float physics:mass = 36.5994
        quatf physics:principalAxes = (0.49307263, 0.5068327, -0.5068296, 0.49307576)
        float urdf:link:inertial:inertia:ixx = 0.3782685
        float urdf:link:inertial:inertia:iyy = 8.444463
        float urdf:link:inertial:inertia:izz = 8.449933
        float urdf:link:inertial:mass = 36.5994
        float3 urdf:link:inertial:origin:rpy = (-3.1415884, -1.5432816, -1.5707943)
        point3f urdf:link:inertial:origin:xyz = (1.01, 9.439549, 0.40680945)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1.01, 9.45, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "hydrant1__fire_hydrant__link_geom_collision_0_fire_hydrant" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/fire_hydrant.usda@</fire_hydrant>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/fire_hydrant>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/fire_hydrant.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "hydrant2__fire_hydrant__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.3782685, 8.444463, 8.449933)
        float mujoco:body:inertial:mass = 36.5994
        point3f mujoco:body:inertial:pos = (-4, 9.439549, 0.40680945)
        quatf mujoco:body:inertial:quat = (0.49307263, 0.5068327, -0.5068296, 0.49307576)
        point3f mujoco:body:pos = (-4, 9.45, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-4, 9.439549, 0.40680945)
        float3 physics:diagonalInertia = (0.3782685, 8.444463, 8.449933)
        float physics:mass = 36.5994
        quatf physics:principalAxes = (0.49307263, 0.5068327, -0.5068296, 0.49307576)
        float urdf:link:inertial:inertia:ixx = 0.3782685
        float urdf:link:inertial:inertia:iyy = 8.444463
        float urdf:link:inertial:inertia:izz = 8.449933
        float urdf:link:inertial:mass = 36.5994
        float3 urdf:link:inertial:origin:rpy = (-3.1415884, -1.5432816, -1.5707943)
        point3f urdf:link:inertial:origin:xyz = (-4, 9.439549, 0.40680945)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-4, 9.45, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "hydrant2__fire_hydrant__link_geom_collision_0_fire_hydrant" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/fire_hydrant.usda@</fire_hydrant>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/fire_hydrant>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/fire_hydrant.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "tree1__pine_tree__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (18388.896, 174619.78, 174635.33)
        float mujoco:body:inertial:mass = 45616.285
        point3f mujoco:body:inertial:pos = (-6.001002, 9.450437, 1.7184936)
        quatf mujoco:body:inertial:quat = (-0.24968722, 0.6612667, 0.24879098, 0.66218257)
        point3f mujoco:body:pos = (-6, 9.45, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-6.001002, 9.450437, 1.7184936)
        float3 physics:diagonalInertia = (18388.896, 174619.78, 174635.33)
        float physics:mass = 45616.285
        quatf physics:principalAxes = (-0.24968722, 0.6612667, 0.24879098, 0.66218257)
        float urdf:link:inertial:inertia:ixx = 18388.896
        float urdf:link:inertial:inertia:iyy = 174619.78
        float urdf:link:inertial:inertia:izz = 174635.33
        float urdf:link:inertial:mass = 45616.285
        float3 urdf:link:inertial:origin:rpy = (-0.4143435, -1.568984, -2.006815)
        point3f urdf:link:inertial:origin:xyz = (-6.001002, 9.450437, 1.7184936)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-6, 9.45, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "tree1__pine_tree__link_geom_collision_0_pine_tree" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/pine_tree.usda@</pine_tree>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/pine_tree>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/pine_tree.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "tree2__pine_tree__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (18388.896, 174619.78, 174635.33)
        float mujoco:body:inertial:mass = 45616.285
        point3f mujoco:body:inertial:pos = (-9.111002, 6.2504363, 1.7184936)
        quatf mujoco:body:inertial:quat = (-0.24968722, 0.6612667, 0.24879098, 0.66218257)
        point3f mujoco:body:pos = (-9.11, 6.25, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-9.111002, 6.2504363, 1.7184936)
        float3 physics:diagonalInertia = (18388.896, 174619.78, 174635.33)
        float physics:mass = 45616.285
        quatf physics:principalAxes = (-0.24968722, 0.6612667, 0.24879098, 0.66218257)
        float urdf:link:inertial:inertia:ixx = 18388.896
        float urdf:link:inertial:inertia:iyy = 174619.78
        float urdf:link:inertial:inertia:izz = 174635.33
        float urdf:link:inertial:mass = 45616.285
        float3 urdf:link:inertial:origin:rpy = (-0.4143435, -1.568984, -2.006815)
        point3f urdf:link:inertial:origin:xyz = (-9.111002, 6.2504363, 1.7184936)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-9.11, 6.25, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "tree2__pine_tree__link_geom_collision_0_pine_tree" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/pine_tree.usda@</pine_tree>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/pine_tree>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/pine_tree.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "human__person_standing__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (2.3079507, 191.34671, 192.58607)
        float mujoco:body:inertial:mass = 148.44008
        point3f mujoco:body:inertial:pos = (-2.0399902, 2.339979, 1.0463935)
        quatf mujoco:body:inertial:quat = (0.47890034, 0.52023, -0.51030403, 0.48949462)
        point3f mujoco:body:pos = (-2.04, 2.41, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-2.0399902, 2.339979, 1.0463935)
        float3 physics:diagonalInertia = (2.3079507, 191.34671, 192.58607)
        float physics:mass = 148.44008
        quatf physics:principalAxes = (0.47890034, 0.52023, -0.51030403, 0.48949462)
        float urdf:link:inertial:inertia:ixx = 2.3079507
        float urdf:link:inertial:inertia:iyy = 191.34671
        float urdf:link:inertial:inertia:izz = 192.58607
        float urdf:link:inertial:mass = 148.44008
        float3 urdf:link:inertial:origin:rpy = (-3.1205726, -1.5086436, -1.5712858)
        point3f urdf:link:inertial:origin:xyz = (-2.0399902, 2.339979, 1.0463935)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-2.04, 2.41, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "human__person_standing__link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, -0.1, 0.01)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.25, 0.175, 0.01)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, -0.1, 0.01)
            float3 urdf:geometry:box:size = (0.5, 0.35, 0.02)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.25, 0, 0, 0), (0, 0.175, 0, 0), (0, 0, 0.01, 0), (0, -0.1, 0.01, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Mesh "human__person_standing__link_geom_collision_1_standing" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/standing.usda@</standing>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/standing>
            point3f mujoco:geom:pos = (0, 0, 0.02)
            quatf mujoco:geom:quat = (0.9998, 0.019998666, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0.04, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.02)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/standing.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0.9992001066609779, 0.03998933418663416, 0), (0, -0.03998933418663416, 0.9992001066609779, 0), (0, 0, 0.02, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "wardrobe__wardrobe__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (194.10927, 2033.2854, 2092.2212)
        float mujoco:body:inertial:mass = 1440
        point3f mujoco:body:inertial:pos = (-2.65, 2.64, 1)
        quatf mujoco:body:inertial:quat = (-0.17454071, 0.6843467, -0.28030664, -0.65010256)
        point3f mujoco:body:pos = (-2.65, 2.44, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-2.65, 2.64, 1)
        float3 physics:diagonalInertia = (194.10927, 2033.2854, 2092.2212)
        float physics:mass = 1440
        quatf physics:principalAxes = (-0.17454071, 0.6843467, -0.28030664, -0.65010256)
        float urdf:link:inertial:inertia:ixx = 194.10927
        float urdf:link:inertial:inertia:iyy = 2033.2854
        float urdf:link:inertial:inertia:izz = 2092.2212
        float urdf:link:inertial:mass = 1440
        float3 urdf:link:inertial:origin:rpy = (2.2124183, 1.4134138, -1.5861753)
        point3f urdf:link:inertial:origin:xyz = (-2.65, 2.64, 1)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-2.65, 2.44, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "wardrobe__wardrobe__base_link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0.2, 1)
            quatf mujoco:geom:quat = (0.7073883, 0, 0, 0.7068252)
            vector3f mujoco:geom:size = (0.5, 0.36, 1)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 1.57)
            point3f urdf:collision:origin:xyz = (0, 0.2, 1)
            float3 urdf:geometry:box:size = (1, 0.72, 2)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.00039816335536663194, 0.49999984146591736, 0, 0), (-0.3599998858554605, 0.000286677615863975, 0, 0), (0, 0, 1, 0), (0, 0.2, 1, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "pizza_box__pizza_box__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.1241275, 0.26181576, 0.37891176)
        float mujoco:body:inertial:mass = 8.61
        point3f mujoco:body:inertial:pos = (2, -0.15, 0.8175)
        quatf mujoco:body:inertial:quat = (-0.70710677, 0, 0, 0.70710677)
        point3f mujoco:body:pos = (2, -0.15, 0.8)
        quatf mujoco:body:quat = (0.87758255, 0, 0, 0.47942555)
        point3f physics:centerOfMass = (2, -0.15, 0.8175)
        float3 physics:diagonalInertia = (0.1241275, 0.26181576, 0.37891176)
        float physics:mass = 8.61
        quatf physics:principalAxes = (-0.70710677, 0, 0, 0.70710677)
        float urdf:link:inertial:inertia:ixx = 0.1241275
        float urdf:link:inertial:inertia:iyy = 0.26181576
        float urdf:link:inertial:inertia:izz = 0.37891176
        float urdf:link:inertial:mass = 8.61
        float3 urdf:link:inertial:origin:rpy = (0, 0, -1.5707964)
        point3f urdf:link:inertial:origin:xyz = (2, -0.15, 0.8175)
        matrix4d xformOp:transform = ( (0.5403023058681398, 0.8414709848078965, 0, 0), (-0.8414709848078965, 0.5403023058681398, 0, 0), (0, 0, 1, 0), (2, -0.15, 0.8, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "pizza_box__pizza_box__base_link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.0175)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.205, 0.3, 0.0175)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.0175)
            float3 urdf:geometry:box:size = (0.41, 0.6, 0.035)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.205, 0, 0, 0), (0, 0.3, 0, 0), (0, 0, 0.0175, 0), (0, 0, 0.0175, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "basmati_rice__basmati_rice__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.0011738235, 0.0021670207, 0.0031026073)
        float mujoco:body:inertial:mass = 0.85034
        point3f mujoco:body:inertial:pos = (-2.85, 0.5, 0.8)
        quatf mujoco:body:inertial:quat = (0.70710677, 0, 0.70710677, 0)
        point3f mujoco:body:pos = (-2.85, 0.5, 0.8)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-2.85, 0.5, 0.8)
        float3 physics:diagonalInertia = (0.0011738235, 0.0021670207, 0.0031026073)
        float physics:mass = 0.85034
        quatf physics:principalAxes = (0.70710677, 0, 0.70710677, 0)
        float urdf:link:inertial:inertia:ixx = 0.0011738235
        float urdf:link:inertial:inertia:iyy = 0.0021670207
        float urdf:link:inertial:inertia:izz = 0.0031026073
        float urdf:link:inertial:mass = 0.85034
        float3 urdf:link:inertial:origin:rpy = (-0, 1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (-2.85, 0.5, 0.8)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-2.85, 0.5, 0.8, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "basmati_rice__basmati_rice__base_link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0205, 0.061, 0.085)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            float3 urdf:geometry:box:size = (0.041, 0.122, 0.17)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0205, 0, 0, 0), (0, 0.061, 0, 0), (0, 0, 0.085, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "tea_box__tea_box__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00056302646, 0.0017519944, 0.0018343471)
        float mujoco:body:inertial:mass = 0.726642
        point3f mujoco:body:inertial:pos = (-2.85, 0.9, 0.85)
        quatf mujoco:body:inertial:quat = (0.5, 0.5, 0.5, 0.5)
        point3f mujoco:body:pos = (-2.85, 0.9, 0.85)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-2.85, 0.9, 0.85)
        float3 physics:diagonalInertia = (0.00056302646, 0.0017519944, 0.0018343471)
        float physics:mass = 0.726642
        quatf physics:principalAxes = (0.5, 0.5, 0.5, 0.5)
        float urdf:link:inertial:inertia:ixx = 0.00056302646
        float urdf:link:inertial:inertia:iyy = 0.0017519944
        float urdf:link:inertial:inertia:izz = 0.0018343471
        float urdf:link:inertial:mass = 0.726642
        float3 urdf:link:inertial:origin:rpy = (1.5707964, 0, 1.5707964)
        point3f urdf:link:inertial:origin:xyz = (-2.85, 0.9, 0.85)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-2.85, 0.9, 0.85, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "tea_box__tea_box__base_link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0315, 0.079, 0.0365)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            float3 urdf:geometry:box:size = (0.063, 0.158, 0.073)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0315, 0, 0, 0), (0, 0.079, 0, 0), (0, 0, 0.0365, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "beer__beer__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00028286115, 0.0006956075, 0.0006956075)
        float mujoco:body:inertial:mass = 0.4618141
        point3f mujoco:body:inertial:pos = (-2.73, -2.64, 0.6)
        quatf mujoco:body:inertial:quat = (0.70710677, 0, 0.70710677, 0)
        point3f mujoco:body:pos = (-2.73, -2.64, 0.6)
        quatf mujoco:body:quat = (0.87758255, 0, 0, 0.47942555)
        point3f physics:centerOfMass = (-2.73, -2.64, 0.6)
        float3 physics:diagonalInertia = (0.00028286115, 0.0006956075, 0.0006956075)
        float physics:mass = 0.4618141
        quatf physics:principalAxes = (0.70710677, 0, 0.70710677, 0)
        float urdf:link:inertial:inertia:ixx = 0.00028286115
        float urdf:link:inertial:inertia:iyy = 0.0006956075
        float urdf:link:inertial:inertia:izz = 0.0006956075
        float urdf:link:inertial:mass = 0.4618141
        float3 urdf:link:inertial:origin:rpy = (-0, 1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (-2.73, -2.64, 0.6)
        matrix4d xformOp:transform = ( (0.5403023058681398, 0.8414709848078965, 0, 0), (-0.8414709848078965, 0.5403023058681398, 0, 0), (0, 0, 1, 0), (-2.73, -2.64, 0.6, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cylinder "beer__beer__link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-0.035, -0.035, -0.06), (0.035, 0.035, 0.06)]
            double height = 0.12
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.035, 0.06, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.035
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            float urdf:geometry:cylinder:length = 0.12
            float urdf:geometry:cylinder:radius = 0.035
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "cup1__plastic_cup__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00013955632, 0.00030715304, 0.00039355183)
        float mujoco:body:inertial:mass = 0.059198495
        point3f mujoco:body:inertial:pos = (-2.8612704, -2.3927634, 0.5228533)
        quatf mujoco:body:inertial:quat = (0.013144684, 0.7069847, -0.013144701, -0.70698446)
        point3f mujoco:body:pos = (-2.85, -2.4, 0.45)
        quatf mujoco:body:quat = (0.87758255, 0, 0, 0.47942555)
        point3f physics:centerOfMass = (-2.8612704, -2.3927634, 0.5228533)
        float3 physics:diagonalInertia = (0.00013955632, 0.00030715304, 0.00039355183)
        float physics:mass = 0.059198495
        quatf physics:principalAxes = (0.013144684, 0.7069847, -0.013144701, -0.70698446)
        float urdf:link:inertial:inertia:ixx = 0.00013955632
        float urdf:link:inertial:inertia:iyy = 0.00030715304
        float urdf:link:inertial:inertia:izz = 0.00039355183
        float urdf:link:inertial:mass = 0.059198495
        float3 urdf:link:inertial:origin:rpy = (1.5708054, 1.5336154, -1.5707873)
        point3f urdf:link:inertial:origin:xyz = (-2.8612704, -2.3927634, 0.5228533)
        matrix4d xformOp:transform = ( (0.5403023058681398, 0.8414709848078965, 0, 0), (-0.8414709848078965, 0.5403023058681398, 0, 0), (0, 0, 1, 0), (-2.85, -2.4, 0.45, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "cup1__plastic_cup__link_geom_collision_0_plastic_cup" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/plastic_cup.usda@</plastic_cup>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/plastic_cup>
            point3f mujoco:geom:pos = (0, 0, 0.065)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.065)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/plastic_cup.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.065, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "cup2__plastic_cup__link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00013955632, 0.00030715304, 0.00039355183)
        float mujoco:body:inertial:mass = 0.059198495
        point3f mujoco:body:inertial:pos = (1.8187295, -0.4727633, 0.87285334)
        quatf mujoco:body:inertial:quat = (0.013144684, 0.7069847, -0.013144701, -0.70698446)
        point3f mujoco:body:pos = (1.83, -0.48, 0.8)
        quatf mujoco:body:quat = (0.87758255, 0, 0, 0.47942555)
        point3f physics:centerOfMass = (1.8187295, -0.4727633, 0.87285334)
        float3 physics:diagonalInertia = (0.00013955632, 0.00030715304, 0.00039355183)
        float physics:mass = 0.059198495
        quatf physics:principalAxes = (0.013144684, 0.7069847, -0.013144701, -0.70698446)
        float urdf:link:inertial:inertia:ixx = 0.00013955632
        float urdf:link:inertial:inertia:iyy = 0.00030715304
        float urdf:link:inertial:inertia:izz = 0.00039355183
        float urdf:link:inertial:mass = 0.059198495
        float3 urdf:link:inertial:origin:rpy = (1.5708054, 1.5336154, -1.5707873)
        point3f urdf:link:inertial:origin:xyz = (1.8187295, -0.4727633, 0.87285334)
        matrix4d xformOp:transform = ( (0.5403023058681398, 0.8414709848078965, 0, 0), (-0.8414709848078965, 0.5403023058681398, 0, 0), (0, 0, 1, 0), (1.83, -0.48, 0.8, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "cup2__plastic_cup__link_geom_collision_0_plastic_cup" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/plastic_cup.usda@</plastic_cup>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/plastic_cup>
            point3f mujoco:geom:pos = (0, 0, 0.065)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.065)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/plastic_cup.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.065, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "shelf__shelf__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (8738.954, 9658.623, 17974.201)
        float mujoco:body:inertial:mass = 936.5328
        point3f mujoco:body:inertial:pos = (-2.8122687, 0.994207, 2.8869176)
        quatf mujoco:body:inertial:quat = (0.7094553, -0.7046996, 0.005962176, 0.006008368)
        point3f mujoco:body:pos = (-2.85, 1, 0)
        quatf mujoco:body:quat = (0.71091354, 0, 0, 0.70327944)
        point3f physics:centerOfMass = (-2.8122687, 0.994207, 2.8869176)
        float3 physics:diagonalInertia = (8738.954, 9658.623, 17974.201)
        float physics:mass = 936.5328
        quatf physics:principalAxes = (0.7094553, -0.7046996, 0.005962176, 0.006008368)
        float urdf:link:inertial:inertia:ixx = 8738.954
        float urdf:link:inertial:inertia:iyy = 9658.623
        float urdf:link:inertial:inertia:izz = 17974.201
        float urdf:link:inertial:mass = 936.5328
        float3 urdf:link:inertial:origin:rpy = (-1.5640694, 0.016928792, 0.0001222692)
        point3f urdf:link:inertial:origin:xyz = (-2.8122687, 0.994207, 2.8869176)
        matrix4d xformOp:transform = ( (0.010796117058267551, 0.9999417202299662, 0, 0), (-0.9999417202299662, 0.010796117058267551, 0, 0), (0, 0, 1, 0), (-2.85, 1, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "shelf__shelf__base_link_geom_collision_0_shelf" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/shelf.usda@</shelf>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/shelf_0_15000000596046448_0_20000000298023224_0_20000000298023224>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.15, 0.2, 0.2)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/shelf.stl@
            float3 urdf:geometry:mesh:scale = (0.15, 0.2, 0.2)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.15, 0, 0, 0), (0, 0.2, 0, 0), (0, 0, 0.2, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "lamp_ikea_arstid__lamp_ikea_arstid__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.25831464, 22.704552, 22.704552)
        float mujoco:body:inertial:mass = 30.844156
        point3f mujoco:body:inertial:pos = (-2.85, -2, 0.8053982)
        quatf mujoco:body:inertial:quat = (0.70710677, 0, 0.70710677, 0)
        point3f mujoco:body:pos = (-2.85, -2, 0)
        quatf mujoco:body:quat = (0.71091354, 0, 0, 0.70327944)
        point3f physics:centerOfMass = (-2.85, -2, 0.8053982)
        float3 physics:diagonalInertia = (0.25831464, 22.704552, 22.704552)
        float physics:mass = 30.844156
        quatf physics:principalAxes = (0.70710677, 0, 0.70710677, 0)
        float urdf:link:inertial:inertia:ixx = 0.25831464
        float urdf:link:inertial:inertia:iyy = 22.704552
        float urdf:link:inertial:inertia:izz = 22.704552
        float urdf:link:inertial:mass = 30.844156
        float3 urdf:link:inertial:origin:rpy = (-0, 1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (-2.85, -2, 0.8053982)
        matrix4d xformOp:transform = ( (0.010796117058267551, 0.9999417202299662, 0, 0), (-0.9999417202299662, 0.010796117058267551, 0, 0), (0, 0, 1, 0), (-2.85, -2, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cylinder "lamp_ikea_arstid__lamp_ikea_arstid__base_link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-0.03, -0.03, -0.4), (0.03, 0.03, 0.4)]
            double height = 0.8
            point3f mujoco:geom:pos = (0, 0, 0.42)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.03, 0.4, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.03
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.42)
            float urdf:geometry:cylinder:length = 0.8
            float urdf:geometry:cylinder:radius = 0.03
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.42, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "lamp_ikea_arstid__lamp_ikea_arstid__base_link_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-0.18, -0.18, -0.01), (0.18, 0.18, 0.01)]
            double height = 0.02
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.18, 0.01, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.18
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            float urdf:geometry:cylinder:length = 0.02
            float urdf:geometry:cylinder:radius = 0.18
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "lamp_ikea_arstid__lamp_ikea_arstid__base_link_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-0.13, -0.13, -0.25), (0.13, 0.13, 0.25)]
            double height = 0.5
            point3f mujoco:geom:pos = (0, 0, 0.9)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.13, 0.25, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.13
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.9)
            float urdf:geometry:cylinder:length = 0.5
            float urdf:geometry:cylinder:radius = 0.13
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.9, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "plant_floor_small__plant_floor_small__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.2926278, 3.8443513, 3.8443513)
        float mujoco:body:inertial:mass = 31.828531
        point3f mujoco:body:inertial:pos = (-2.84, -3.05, 0.30065575)
        quatf mujoco:body:inertial:quat = (-0.12127259, 0.6966297, 0.121272594, 0.6966297)
        point3f mujoco:body:pos = (-2.84, -3.05, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-2.84, -3.05, 0.30065575)
        float3 physics:diagonalInertia = (0.2926278, 3.8443513, 3.8443513)
        float physics:mass = 31.828531
        quatf physics:principalAxes = (-0.12127259, 0.6966297, 0.121272594, 0.6966297)
        float urdf:link:inertial:inertia:ixx = 0.2926278
        float urdf:link:inertial:inertia:iyy = 3.8443513
        float urdf:link:inertial:inertia:izz = 3.8443513
        float urdf:link:inertial:mass = 31.828531
        float3 urdf:link:inertial:origin:rpy = (-2.7968779, -1.5707964, 0)
        point3f urdf:link:inertial:origin:xyz = (-2.84, -3.05, 0.30065575)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-2.84, -3.05, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "plant_floor_small__plant_floor_small__base_link_geom_collision_0_plant_floor_small" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/plant_floor_small.usda@</plant_floor_small>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/plant_floor_small>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/plant_floor_small.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "apple_juice_box__apple_juice__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000978464, 0.0074196593, 0.0074196593)
        float mujoco:body:inertial:mass = 1.233099
        point3f mujoco:body:inertial:pos = (-2.84, 1.64, 1.0055)
        quatf mujoco:body:inertial:quat = (0.70710677, 0, 0.70710677, 0)
        point3f mujoco:body:pos = (-2.84, 1.64, 1)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-2.84, 1.64, 1.0055)
        float3 physics:diagonalInertia = (0.000978464, 0.0074196593, 0.0074196593)
        float physics:mass = 1.233099
        quatf physics:principalAxes = (0.70710677, 0, 0.70710677, 0)
        float urdf:link:inertial:inertia:ixx = 0.000978464
        float urdf:link:inertial:inertia:iyy = 0.0074196593
        float urdf:link:inertial:inertia:izz = 0.0074196593
        float urdf:link:inertial:mass = 1.233099
        float3 urdf:link:inertial:origin:rpy = (-0, 1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (-2.84, 1.64, 1.0055)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-2.84, 1.64, 1, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "apple_juice_box__apple_juice__base_link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.0055)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0345, 0.0345, 0.1295)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.0055)
            float3 urdf:geometry:box:size = (0.069, 0.069, 0.259)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0345, 0, 0, 0), (0, 0.0345, 0, 0), (0, 0, 0.1295, 0), (0, 0, 0.0055, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "table_bedside__table_bedside__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (8.64, 12, 12)
        float mujoco:body:inertial:mass = 144
        point3f mujoco:body:inertial:pos = (-2.82, -2.48, 0.2)
        quatf mujoco:body:inertial:quat = (0.70710677, 0, 0.70710677, 0)
        point3f mujoco:body:pos = (-2.82, -2.48, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-2.82, -2.48, 0.2)
        float3 physics:diagonalInertia = (8.64, 12, 12)
        float physics:mass = 144
        quatf physics:principalAxes = (0.70710677, 0, 0.70710677, 0)
        float urdf:link:inertial:inertia:ixx = 8.64
        float urdf:link:inertial:inertia:iyy = 12
        float urdf:link:inertial:inertia:izz = 12
        float urdf:link:inertial:mass = 144
        float3 urdf:link:inertial:origin:rpy = (-0, 1.5707963, 0)
        point3f urdf:link:inertial:origin:xyz = (-2.82, -2.48, 0.2)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-2.82, -2.48, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "table_bedside__table_bedside__base_link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.3, 0.3, 0.2)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.2)
            float3 urdf:geometry:box:size = (0.6, 0.6, 0.4)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.3, 0, 0, 0), (0, 0.3, 0, 0), (0, 0, 0.2, 0), (0, 0, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "bed__bed__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (598.4, 915.2, 1386.88)
        float mujoco:body:inertial:mass = 2112
        point3f mujoco:body:inertial:pos = (-1.74933, 4.30992, 0)
        quatf mujoco:body:inertial:quat = (-0.70710677, 0, 0, 0.70710677)
        point3f mujoco:body:pos = (-1.94933, 4.30992, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-1.74933, 4.30992, 0)
        float3 physics:diagonalInertia = (598.4, 915.2, 1386.88)
        float physics:mass = 2112
        quatf physics:principalAxes = (-0.70710677, 0, 0, 0.70710677)
        float urdf:link:inertial:inertia:ixx = 598.4
        float urdf:link:inertial:inertia:iyy = 915.2
        float urdf:link:inertial:inertia:izz = 1386.88
        float urdf:link:inertial:mass = 2112
        float3 urdf:link:inertial:origin:rpy = (0, 0, -1.5707964)
        point3f urdf:link:inertial:origin:xyz = (-1.74933, 4.30992, 0)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-1.94933, 4.30992, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "bed__bed__link_0_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.2, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.8, 1.1, 0.3)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.2, 0, 0)
            float3 urdf:geometry:box:size = (1.6, 2.2, 0.6)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.8, 0, 0, 0), (0, 1.1, 0, 0), (0, 0, 0.3, 0), (0.2, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "nightstand1__bedroom_nightstand__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (676.2904, 2932.332, 3056.3413)
        float mujoco:body:inertial:mass = -149.60367
        point3f mujoco:body:inertial:pos = (-10.686118, 8.361297, -45.00915)
        quatf mujoco:body:inertial:quat = (0.63446987, 0.010811968, 0.77215713, 0.033232406)
        point3f mujoco:body:pos = (-0.69, 5, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-10.686118, 8.361297, -45.00915)
        float3 physics:diagonalInertia = (676.2904, 2932.332, 3056.3413)
        float physics:mass = -149.60367
        quatf physics:principalAxes = (0.63446987, 0.010811968, 0.77215713, 0.033232406)
        float urdf:link:inertial:inertia:ixx = 676.2904
        float urdf:link:inertial:inertia:iyy = 2932.332
        float urdf:link:inertial:inertia:izz = 3056.3413
        float urdf:link:inertial:mass = -149.60367
        float3 urdf:link:inertial:origin:rpy = (2.8160543, 1.3659995, 2.84793)
        point3f urdf:link:inertial:origin:xyz = (-10.686118, 8.361297, -45.00915)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.69, 5, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "nightstand1__bedroom_nightstand__link_0_geom_collision_0_bedroom_nightstand" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/bedroom_nightstand.usda@</bedroom_nightstand>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/bedroom_nightstand>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/bedroom_nightstand.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "nightstand2__bedroom_nightstand__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (676.2904, 2932.332, 3056.3413)
        float mujoco:body:inertial:mass = -149.60367
        point3f mujoco:body:inertial:pos = (-12.886118, 8.398426, -45.00915)
        quatf mujoco:body:inertial:quat = (0.63446987, 0.010811968, 0.77215713, 0.033232406)
        point3f mujoco:body:pos = (-2.89, 5.03713, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-12.886118, 8.398426, -45.00915)
        float3 physics:diagonalInertia = (676.2904, 2932.332, 3056.3413)
        float physics:mass = -149.60367
        quatf physics:principalAxes = (0.63446987, 0.010811968, 0.77215713, 0.033232406)
        float urdf:link:inertial:inertia:ixx = 676.2904
        float urdf:link:inertial:inertia:iyy = 2932.332
        float urdf:link:inertial:inertia:izz = 3056.3413
        float urdf:link:inertial:mass = -149.60367
        float3 urdf:link:inertial:origin:rpy = (2.8160543, 1.3659995, 2.84793)
        point3f urdf:link:inertial:origin:xyz = (-12.886118, 8.398426, -45.00915)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-2.89, 5.03713, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "nightstand2__bedroom_nightstand__link_0_geom_collision_0_bedroom_nightstand" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/bedroom_nightstand.usda@</bedroom_nightstand>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/bedroom_nightstand>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/bedroom_nightstand.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "dinning_room_table__dinning_room_table__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (35.73596, 83.058784, 95.9404)
        float mujoco:body:inertial:mass = 138.99115
        point3f mujoco:body:inertial:pos = (2.0164378, -2.2971332, 0.7025341)
        quatf mujoco:body:inertial:quat = (0.52685004, 0.5146865, 0.47334453, -0.48318914)
        point3f mujoco:body:pos = (2.05802, -2.30976, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (2.0164378, -2.2971332, 0.7025341)
        float3 physics:diagonalInertia = (35.73596, 83.058784, 95.9404)
        float physics:mass = 138.99115
        quatf physics:principalAxes = (0.52685004, 0.5146865, 0.47334453, -0.48318914)
        float urdf:link:inertial:inertia:ixx = 35.73596
        float urdf:link:inertial:inertia:iyy = 83.058784
        float urdf:link:inertial:inertia:izz = 95.9404
        float urdf:link:inertial:mass = 138.99115
        float3 urdf:link:inertial:origin:rpy = (1.3162887, 1.4829624, -0.25218645)
        point3f urdf:link:inertial:origin:xyz = (2.0164378, -2.2971332, 0.7025341)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.05802, -2.30976, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "dinning_room_table__dinning_room_table__base_link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.04, 0.015, 0.75)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.65, 0.45, 0.05)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.04, 0.015, 0.75)
            float3 urdf:geometry:box:size = (1.3, 0.9, 0.1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.65, 0, 0, 0), (0, 0.45, 0, 0), (0, 0, 0.05, 0), (-0.04, 0.015, 0.75, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "dinning_room_table__dinning_room_table__base_link_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-0.05, -0.05, -0.35), (0.05, 0.05, 0.35)]
            double height = 0.7
            point3f mujoco:geom:pos = (-0.65, -0.4, 0.45)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.35, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.05
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.65, -0.4, 0.45)
            float urdf:geometry:cylinder:length = 0.7
            float urdf:geometry:cylinder:radius = 0.05
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.65, -0.4, 0.45, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "dinning_room_table__dinning_room_table__base_link_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-0.05, -0.05, -0.35), (0.05, 0.05, 0.35)]
            double height = 0.7
            point3f mujoco:geom:pos = (0.55, -0.4, 0.45)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.35, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.05
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.55, -0.4, 0.45)
            float urdf:geometry:cylinder:length = 0.7
            float urdf:geometry:cylinder:radius = 0.05
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.55, -0.4, 0.45, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "dinning_room_table__dinning_room_table__base_link_geom_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-0.05, -0.05, -0.35), (0.05, 0.05, 0.35)]
            double height = 0.7
            point3f mujoco:geom:pos = (0.55, 0.4, 0.45)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.35, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.05
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.55, 0.4, 0.45)
            float urdf:geometry:cylinder:length = 0.7
            float urdf:geometry:cylinder:radius = 0.05
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.55, 0.4, 0.45, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "dinning_room_table__dinning_room_table__base_link_geom_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-0.05, -0.05, -0.35), (0.05, 0.05, 0.35)]
            double height = 0.7
            point3f mujoco:geom:pos = (-0.65, 0.4, 0.45)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.35, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.05
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.65, 0.4, 0.45)
            float urdf:geometry:cylinder:length = 0.7
            float urdf:geometry:cylinder:radius = 0.05
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.65, 0.4, 0.45, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "table_living_room__table_living_room__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (67.391754, 106.836845, 133.343)
        float mujoco:body:inertial:mass = 221.2
        point3f mujoco:body:inertial:pos = (2.0238965, -0.12756687, 0.58566004)
        quatf mujoco:body:inertial:quat = (0.02720206, 0.7267294, -0.029595908, -0.68574667)
        point3f mujoco:body:pos = (2, -0.156695, 0)
        quatf mujoco:body:quat = (0.7086488, 0, 0, -0.70556134)
        point3f physics:centerOfMass = (2.0238965, -0.12756687, 0.58566004)
        float3 physics:diagonalInertia = (67.391754, 106.836845, 133.343)
        float physics:mass = 221.2
        quatf physics:principalAxes = (0.02720206, 0.7267294, -0.029595908, -0.68574667)
        float urdf:link:inertial:inertia:ixx = 67.391754
        float urdf:link:inertial:inertia:iyy = 106.836845
        float urdf:link:inertial:inertia:izz = 133.343
        float urdf:link:inertial:mass = 221.2
        float3 urdf:link:inertial:origin:rpy = (2.197536, 1.4717044, -0.9474463)
        point3f urdf:link:inertial:origin:xyz = (2.0238965, -0.12756687, 0.58566004)
        matrix4d xformOp:transform = ( (0.004366312921045057, -0.9999904676103044, 0, 0), (0.9999904676103044, 0.004366312921045057, 0, 0), (0, 0, 1, 0), (2, -0.156695, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "table_living_room__table_living_room__base_link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.03, 0.025, 0.75)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.525, 0.75, 0.04)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.03, 0.025, 0.75)
            float3 urdf:geometry:box:size = (1.05, 1.5, 0.08)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.525, 0, 0, 0), (0, 0.75, 0, 0), (0, 0, 0.04, 0), (-0.03, 0.025, 0.75, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "table_living_room__table_living_room__base_link_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.03, 0.025, 0.35)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.4, 0.65, 0.025)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.03, 0.025, 0.35)
            float3 urdf:geometry:box:size = (0.8, 1.3, 0.05)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.4, 0, 0, 0), (0, 0.65, 0, 0), (0, 0, 0.025, 0), (-0.03, 0.025, 0.35, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "table_living_room__table_living_room__base_link_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.4, 0.63, 0.39)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.06, 0.06, 0.375)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.4, 0.63, 0.39)
            float3 urdf:geometry:box:size = (0.12, 0.12, 0.75)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.06, 0, 0, 0), (0, 0.06, 0, 0), (0, 0, 0.375, 0), (-0.4, 0.63, 0.39, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "table_living_room__table_living_room__base_link_geom_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.35, 0.63, 0.39)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.06, 0.06, 0.375)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.35, 0.63, 0.39)
            float3 urdf:geometry:box:size = (0.12, 0.12, 0.75)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.06, 0, 0, 0), (0, 0.06, 0, 0), (0, 0, 0.375, 0), (0.35, 0.63, 0.39, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "table_living_room__table_living_room__base_link_geom_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.35, -0.59, 0.39)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.06, 0.06, 0.375)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.35, -0.59, 0.39)
            float3 urdf:geometry:box:size = (0.12, 0.12, 0.75)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.06, 0, 0, 0), (0, 0.06, 0, 0), (0, 0, 0.375, 0), (0.35, -0.59, 0.39, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "table_living_room__table_living_room__base_link_geom_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.4, -0.59, 0.39)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.06, 0.06, 0.375)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.4, -0.59, 0.39)
            float3 urdf:geometry:box:size = (0.12, 0.12, 0.75)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.06, 0, 0, 0), (0, 0.06, 0, 0), (0, 0, 0.375, 0), (-0.4, -0.59, 0.39, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "cabinet_diamondback__cabinet_diamondback__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (2.8133612, 50.356747, 51.050243)
        float mujoco:body:inertial:mass = 131.50061
        point3f mujoco:body:inertial:pos = (0.905422, 1.6964283, 0.53027457)
        quatf mujoco:body:inertial:quat = (-0.70388675, 0.0009192683, 0.7102904, 0.0054888767)
        point3f mujoco:body:pos = (0.91, 1.69, 0)
        quatf mujoco:body:quat = (0.7086488, 0, 0, -0.70556134)
        point3f physics:centerOfMass = (0.905422, 1.6964283, 0.53027457)
        float3 physics:diagonalInertia = (2.8133612, 50.356747, 51.050243)
        float physics:mass = 131.50061
        quatf physics:principalAxes = (-0.70388675, 0.0009192683, 0.7102904, 0.0054888767)
        float urdf:link:inertial:inertia:ixx = 2.8133612
        float urdf:link:inertial:inertia:iyy = 50.356747
        float urdf:link:inertial:inertia:izz = 51.050243
        float urdf:link:inertial:mass = 131.50061
        float3 urdf:link:inertial:origin:rpy = (2.517268, -1.5596708, -2.5263307)
        point3f urdf:link:inertial:origin:xyz = (0.905422, 1.6964283, 0.53027457)
        matrix4d xformOp:transform = ( (0.004366312921045057, -0.9999904676103044, 0, 0), (0.9999904676103044, 0.004366312921045057, 0, 0), (0, 0, 1, 0), (0.91, 1.69, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "cabinet_diamondback__cabinet_diamondback__base_link_geom_collision_0_cabinet_diamondback" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/cabinet_diamondback.usda@</cabinet_diamondback>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/cabinet_diamondback_1_7999999523162842_1_0_1_0>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1.8, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/cabinet_diamondback.stl@
            float3 urdf:geometry:mesh:scale = (1.8, 1, 1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1.8, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "cabinet_ikea_galant__cabinet_ikea_galant__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (153.01915, 157.06548, 265.04993)
        float mujoco:body:inertial:mass = 926.64
        point3f mujoco:body:inertial:pos = (1.8, 1.68, 0)
        quatf mujoco:body:inertial:quat = (-0.5, 0.5, 0.5, 0.5)
        point3f mujoco:body:pos = (1.8, 1.68, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (1.8, 1.68, 0)
        float3 physics:diagonalInertia = (153.01915, 157.06548, 265.04993)
        float physics:mass = 926.64
        quatf physics:principalAxes = (-0.5, 0.5, 0.5, 0.5)
        float urdf:link:inertial:inertia:ixx = 153.01915
        float urdf:link:inertial:inertia:iyy = 157.06548
        float urdf:link:inertial:inertia:izz = 265.04993
        float urdf:link:inertial:mass = 926.64
        float3 urdf:link:inertial:origin:rpy = (-1.5707964, -1.5707964, 0)
        point3f urdf:link:inertial:origin:xyz = (1.8, 1.68, 0)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1.8, 1.68, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "cabinet_ikea_galant__cabinet_ikea_galant__base_link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.65, 0.27, 0.66)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            float3 urdf:geometry:box:size = (1.3, 0.54, 1.32)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.65, 0, 0, 0), (0, 0.27, 0, 0), (0, 0, 0.66, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "tray_blue_white__tray_blue_white__base_link" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.004890352, 0.008303552, 0.0131468)
        float mujoco:body:inertial:mass = 1.104
        point3f mujoco:body:inertial:pos = (2.12, 1.67, 1)
        quatf mujoco:body:inertial:quat = (-0.70710677, 0, 0, 0.70710677)
        point3f mujoco:body:pos = (2.12, 1.67, 1)
        quatf mujoco:body:quat = (0.71791065, 0, 0, -0.6961352)
        point3f physics:centerOfMass = (2.12, 1.67, 1)
        float3 physics:diagonalInertia = (0.004890352, 0.008303552, 0.0131468)
        float physics:mass = 1.104
        quatf physics:principalAxes = (-0.70710677, 0, 0, 0.70710677)
        float urdf:link:inertial:inertia:ixx = 0.004890352
        float urdf:link:inertial:inertia:iyy = 0.008303552
        float urdf:link:inertial:inertia:izz = 0.0131468
        float urdf:link:inertial:mass = 1.104
        float3 urdf:link:inertial:origin:rpy = (0, 0, -1.5707964)
        point3f urdf:link:inertial:origin:xyz = (2.12, 1.67, 1)
        matrix4d xformOp:transform = ( (0.030791459082466277, -0.999525830605479, 0, 0), (0.999525830605479, 0.030791459082466277, 0, 0), (0, 0, 1, 0), (2.12, 1.67, 1, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "tray_blue_white__tray_blue_white__base_link_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.115, 0.15, 0.008)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            float3 urdf:geometry:box:size = (0.23, 0.3, 0.016)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.115, 0, 0, 0), (0, 0.15, 0, 0), (0, 0, 0.008, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "chair_dinning_room_1__simple_chair__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (1.8411254, 10.582729, 10.87729)
        float mujoco:body:inertial:mass = 38.3
        point3f mujoco:body:inertial:pos = (2.056658, -3.1632507, 0.4222585)
        quatf mujoco:body:inertial:quat = (0.6974498, -0.40263224, -0.40812212, -0.4299853)
        point3f mujoco:body:pos = (1.91, -3.05, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (2.056658, -3.1632507, 0.4222585)
        float3 physics:diagonalInertia = (1.8411254, 10.582729, 10.87729)
        float physics:mass = 38.3
        quatf physics:principalAxes = (0.6974498, -0.40263224, -0.40812212, -0.4299853)
        float urdf:link:inertial:inertia:ixx = 1.8411254
        float urdf:link:inertial:inertia:iyy = 10.582729
        float urdf:link:inertial:inertia:izz = 10.87729
        float urdf:link:inertial:mass = 38.3
        float3 urdf:link:inertial:origin:rpy = (-0.5512287, -1.1568516, -0.73974866)
        point3f urdf:link:inertial:origin:xyz = (2.056658, -3.1632507, 0.4222585)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1.91, -3.05, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "chair_dinning_room_1__simple_chair__link_0_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.15, -0.05, 0.45)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.25, 0.225, 0.025)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.15, -0.05, 0.45)
            float3 urdf:geometry:box:size = (0.5, 0.45, 0.05)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.25, 0, 0, 0), (0, 0.225, 0, 0), (0, 0, 0.025, 0), (0.15, -0.05, 0.45, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_dinning_room_1__simple_chair__link_0_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.15, -0.22, 0.6)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.25, 0.0375, 0.19)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.15, -0.22, 0.6)
            float3 urdf:geometry:box:size = (0.5, 0.075, 0.38)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.25, 0, 0, 0), (0, 0.0375, 0, 0), (0, 0, 0.19, 0), (0.15, -0.22, 0.6, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_dinning_room_1__simple_chair__link_0_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, -0.25, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, -0.25, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (0.33, -0.25, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_dinning_room_1__simple_chair__link_0_geom_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, 0.15, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, 0.15, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (0.33, 0.15, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_dinning_room_1__simple_chair__link_0_geom_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.05, -0.25, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.05, -0.25, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (-0.05, -0.25, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_dinning_room_1__simple_chair__link_0_geom_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.05, 0.15, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.05, 0.15, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (-0.05, 0.15, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "chair_dinning_room_2__simple_chair__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (1.8411254, 10.582729, 10.87729)
        float mujoco:body:inertial:mass = 38.3
        point3f mujoco:body:inertial:pos = (3.07657, -2.3759663, 0.4222585)
        quatf mujoco:body:inertial:quat = (0.6974498, -0.40263224, -0.40812212, -0.4299853)
        point3f mujoco:body:pos = (2.96, -2.52, 0)
        quatf mujoco:body:quat = (0.7151344, 0, 0, 0.698987)
        point3f physics:centerOfMass = (3.07657, -2.3759663, 0.4222585)
        float3 physics:diagonalInertia = (1.8411254, 10.582729, 10.87729)
        float physics:mass = 38.3
        quatf physics:principalAxes = (0.6974498, -0.40263224, -0.40812212, -0.4299853)
        float urdf:link:inertial:inertia:ixx = 1.8411254
        float urdf:link:inertial:inertia:iyy = 10.582729
        float urdf:link:inertial:inertia:izz = 10.87729
        float urdf:link:inertial:mass = 38.3
        float3 urdf:link:inertial:origin:rpy = (-0.5512287, -1.1568516, -0.73974866)
        point3f urdf:link:inertial:origin:xyz = (3.07657, -2.3759663, 0.4222585)
        matrix4d xformOp:transform = ( (0.02283434199753831, 0.9997392624207271, 0, 0), (-0.9997392624207271, 0.02283434199753831, 0, 0), (0, 0, 1, 0), (2.96, -2.52, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "chair_dinning_room_2__simple_chair__link_0_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.15, -0.05, 0.45)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.25, 0.225, 0.025)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.15, -0.05, 0.45)
            float3 urdf:geometry:box:size = (0.5, 0.45, 0.05)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.25, 0, 0, 0), (0, 0.225, 0, 0), (0, 0, 0.025, 0), (0.15, -0.05, 0.45, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_dinning_room_2__simple_chair__link_0_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.15, -0.22, 0.6)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.25, 0.0375, 0.19)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.15, -0.22, 0.6)
            float3 urdf:geometry:box:size = (0.5, 0.075, 0.38)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.25, 0, 0, 0), (0, 0.0375, 0, 0), (0, 0, 0.19, 0), (0.15, -0.22, 0.6, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_dinning_room_2__simple_chair__link_0_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, -0.25, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, -0.25, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (0.33, -0.25, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_dinning_room_2__simple_chair__link_0_geom_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, 0.15, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, 0.15, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (0.33, 0.15, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_dinning_room_2__simple_chair__link_0_geom_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.05, -0.25, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.05, -0.25, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (-0.05, -0.25, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_dinning_room_2__simple_chair__link_0_geom_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.05, 0.15, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.05, 0.15, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (-0.05, 0.15, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "chair_kitchen_1__simple_chair__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (1.8411254, 10.582729, 10.87729)
        float mujoco:body:inertial:mass = 38.3
        point3f mujoco:body:inertial:pos = (1.716658, -1.0932506, 0.4222585)
        quatf mujoco:body:inertial:quat = (0.6974498, -0.40263224, -0.40812212, -0.4299853)
        point3f mujoco:body:pos = (1.57, -0.98, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (1.716658, -1.0932506, 0.4222585)
        float3 physics:diagonalInertia = (1.8411254, 10.582729, 10.87729)
        float physics:mass = 38.3
        quatf physics:principalAxes = (0.6974498, -0.40263224, -0.40812212, -0.4299853)
        float urdf:link:inertial:inertia:ixx = 1.8411254
        float urdf:link:inertial:inertia:iyy = 10.582729
        float urdf:link:inertial:inertia:izz = 10.87729
        float urdf:link:inertial:mass = 38.3
        float3 urdf:link:inertial:origin:rpy = (-0.5512287, -1.1568516, -0.73974866)
        point3f urdf:link:inertial:origin:xyz = (1.716658, -1.0932506, 0.4222585)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1.57, -0.98, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "chair_kitchen_1__simple_chair__link_0_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.15, -0.05, 0.45)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.25, 0.225, 0.025)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.15, -0.05, 0.45)
            float3 urdf:geometry:box:size = (0.5, 0.45, 0.05)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.25, 0, 0, 0), (0, 0.225, 0, 0), (0, 0, 0.025, 0), (0.15, -0.05, 0.45, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_1__simple_chair__link_0_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.15, -0.22, 0.6)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.25, 0.0375, 0.19)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.15, -0.22, 0.6)
            float3 urdf:geometry:box:size = (0.5, 0.075, 0.38)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.25, 0, 0, 0), (0, 0.0375, 0, 0), (0, 0, 0.19, 0), (0.15, -0.22, 0.6, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_1__simple_chair__link_0_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, -0.25, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, -0.25, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (0.33, -0.25, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_1__simple_chair__link_0_geom_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, 0.15, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, 0.15, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (0.33, 0.15, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_1__simple_chair__link_0_geom_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.05, -0.25, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.05, -0.25, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (-0.05, -0.25, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_1__simple_chair__link_0_geom_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.05, 0.15, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.05, 0.15, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (-0.05, 0.15, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "chair_kitchen_2__simple_chair__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (1.8411254, 10.582729, 10.87729)
        float mujoco:body:inertial:mass = 38.3
        point3f mujoco:body:inertial:pos = (2.406658, -1.0832506, 0.4222585)
        quatf mujoco:body:inertial:quat = (0.6974498, -0.40263224, -0.40812212, -0.4299853)
        point3f mujoco:body:pos = (2.26, -0.97, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (2.406658, -1.0832506, 0.4222585)
        float3 physics:diagonalInertia = (1.8411254, 10.582729, 10.87729)
        float physics:mass = 38.3
        quatf physics:principalAxes = (0.6974498, -0.40263224, -0.40812212, -0.4299853)
        float urdf:link:inertial:inertia:ixx = 1.8411254
        float urdf:link:inertial:inertia:iyy = 10.582729
        float urdf:link:inertial:inertia:izz = 10.87729
        float urdf:link:inertial:mass = 38.3
        float3 urdf:link:inertial:origin:rpy = (-0.5512287, -1.1568516, -0.73974866)
        point3f urdf:link:inertial:origin:xyz = (2.406658, -1.0832506, 0.4222585)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.26, -0.97, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "chair_kitchen_2__simple_chair__link_0_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.15, -0.05, 0.45)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.25, 0.225, 0.025)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.15, -0.05, 0.45)
            float3 urdf:geometry:box:size = (0.5, 0.45, 0.05)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.25, 0, 0, 0), (0, 0.225, 0, 0), (0, 0, 0.025, 0), (0.15, -0.05, 0.45, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_2__simple_chair__link_0_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.15, -0.22, 0.6)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.25, 0.0375, 0.19)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.15, -0.22, 0.6)
            float3 urdf:geometry:box:size = (0.5, 0.075, 0.38)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.25, 0, 0, 0), (0, 0.0375, 0, 0), (0, 0, 0.19, 0), (0.15, -0.22, 0.6, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_2__simple_chair__link_0_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, -0.25, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, -0.25, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (0.33, -0.25, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_2__simple_chair__link_0_geom_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, 0.15, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, 0.15, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (0.33, 0.15, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_2__simple_chair__link_0_geom_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.05, -0.25, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.05, -0.25, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (-0.05, -0.25, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_2__simple_chair__link_0_geom_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.05, 0.15, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.05, 0.15, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (-0.05, 0.15, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "chair_kitchen_3__simple_chair__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (1.8411254, 10.582729, 10.87729)
        float mujoco:body:inertial:mass = 38.3
        point3f mujoco:body:inertial:pos = (2.9904137, -0.11119438, 0.4222585)
        quatf mujoco:body:inertial:quat = (0.6974498, -0.40263224, -0.40812212, -0.4299853)
        point3f mujoco:body:pos = (2.88, -0.26, 0)
        quatf mujoco:body:quat = (0.7002848, 0, 0, 0.7138636)
        point3f physics:centerOfMass = (2.9904137, -0.11119438, 0.4222585)
        float3 physics:diagonalInertia = (1.8411254, 10.582729, 10.87729)
        float physics:mass = 38.3
        quatf physics:principalAxes = (0.6974498, -0.40263224, -0.40812212, -0.4299853)
        float urdf:link:inertial:inertia:ixx = 1.8411254
        float urdf:link:inertial:inertia:iyy = 10.582729
        float urdf:link:inertial:inertia:izz = 10.87729
        float urdf:link:inertial:mass = 38.3
        float3 urdf:link:inertial:origin:rpy = (-0.5512287, -1.1568516, -0.73974866)
        point3f urdf:link:inertial:origin:xyz = (2.9904137, -0.11119438, 0.4222585)
        matrix4d xformOp:transform = ( (-0.019202492901692736, 0.999815615134291, 0, 0), (-0.999815615134291, -0.019202492901692736, 0, 0), (0, 0, 1, 0), (2.88, -0.26, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "chair_kitchen_3__simple_chair__link_0_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.15, -0.05, 0.45)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.25, 0.225, 0.025)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.15, -0.05, 0.45)
            float3 urdf:geometry:box:size = (0.5, 0.45, 0.05)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.25, 0, 0, 0), (0, 0.225, 0, 0), (0, 0, 0.025, 0), (0.15, -0.05, 0.45, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_3__simple_chair__link_0_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.15, -0.22, 0.6)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.25, 0.0375, 0.19)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.15, -0.22, 0.6)
            float3 urdf:geometry:box:size = (0.5, 0.075, 0.38)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.25, 0, 0, 0), (0, 0.0375, 0, 0), (0, 0, 0.19, 0), (0.15, -0.22, 0.6, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_3__simple_chair__link_0_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, -0.25, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, -0.25, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (0.33, -0.25, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_3__simple_chair__link_0_geom_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, 0.15, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, 0.15, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (0.33, 0.15, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_3__simple_chair__link_0_geom_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.05, -0.25, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.05, -0.25, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (-0.05, -0.25, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair_kitchen_3__simple_chair__link_0_geom_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.05, 0.15, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.04, 0.04, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.05, 0.15, 0.2)
            float3 urdf:geometry:box:size = (0.08, 0.08, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.04, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.25, 0), (-0.05, 0.15, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "sofa__sofa__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (254.19417, 444.49725, 572.4611)
        float mujoco:body:inertial:mass = 1104.203
        point3f mujoco:body:inertial:pos = (-0.6444776, -0.9, 0.32891652)
        quatf mujoco:body:inertial:quat = (0.6094619, -0.35854727, -0.35854727, 0.6094619)
        point3f mujoco:body:pos = (-0.76, -0.9, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.6444776, -0.9, 0.32891652)
        float3 physics:diagonalInertia = (254.19417, 444.49725, 572.4611)
        float physics:mass = 1104.203
        quatf physics:principalAxes = (0.6094619, -0.35854727, -0.35854727, 0.6094619)
        float urdf:link:inertial:inertia:ixx = 254.19417
        float urdf:link:inertial:inertia:iyy = 444.49725
        float urdf:link:inertial:inertia:izz = 572.4611
        float urdf:link:inertial:mass = 1104.203
        float3 urdf:link:inertial:origin:rpy = (-1.0635463, 0, 1.5707964)
        point3f urdf:link:inertial:origin:xyz = (-0.6444776, -0.9, 0.32891652)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.76, -0.9, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "sofa__sofa__link_0_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.05, 0, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.465, 0.915, 0.185)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.05, 0, 0.2)
            float3 urdf:geometry:box:size = (0.93, 1.83, 0.37)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.465, 0, 0, 0), (0, 0.915, 0, 0), (0, 0, 0.185, 0), (0.05, 0, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "sofa__sofa__link_0_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.35, 0, 0.5)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.15, 0.915, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.35, 0, 0.5)
            float3 urdf:geometry:box:size = (0.3, 1.83, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.15, 0, 0, 0), (0, 0.915, 0, 0), (0, 0, 0.25, 0), (0.35, 0, 0.5, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "sofa__sofa__link_0_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, -0.8, 0.5)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.4, 0.125, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, -0.8, 0.5)
            float3 urdf:geometry:box:size = (0.8, 0.25, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.4, 0, 0, 0), (0, 0.125, 0, 0), (0, 0, 0.25, 0), (0, -0.8, 0.5, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "sofa__sofa__link_0_geom_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0.8, 0.5)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.4, 0.125, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0.8, 0.5)
            float3 urdf:geometry:box:size = (0.8, 0.25, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.4, 0, 0, 0), (0, 0.125, 0, 0), (0, 0, 0.25, 0), (0, 0.8, 0.5, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "chair1__tv_chair__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (13.709712, 64.62011, 65.55413)
        float mujoco:body:inertial:mass = 176
        point3f mujoco:body:inertial:pos = (-0.69937503, -2.0499756, 0.4872159)
        quatf mujoco:body:inertial:quat = (-0.5439414, -0.45180503, -0.45180503, 0.5439414)
        point3f mujoco:body:pos = (-0.73, -2.05, 0)
        quatf mujoco:body:quat = (0.7073883, 0, 0, -0.7068252)
        point3f physics:centerOfMass = (-0.69937503, -2.0499756, 0.4872159)
        float3 physics:diagonalInertia = (13.709712, 64.62011, 65.55413)
        float physics:mass = 176
        quatf physics:principalAxes = (-0.5439414, -0.45180503, -0.45180503, 0.5439414)
        float urdf:link:inertial:inertia:ixx = 13.709712
        float urdf:link:inertial:inertia:iyy = 64.62011
        float urdf:link:inertial:inertia:izz = 65.55413
        float urdf:link:inertial:mass = 176
        float3 urdf:link:inertial:origin:rpy = (0, 1.3862619, -1.5707964)
        point3f urdf:link:inertial:origin:xyz = (-0.69937503, -2.0499756, 0.4872159)
        matrix4d xformOp:transform = ( (0.0007963267107332639, -0.9999996829318347, 0, 0), (0.9999996829318347, 0.0007963267107332639, 0, 0), (0, 0, 1, 0), (-0.73, -2.05, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "chair1__tv_chair__link_0_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, -0.2, 0.35)
            quatf mujoco:geom:quat = (0.990216, -0.13954312, 0, 0)
            vector3f mujoco:geom:size = (0.35, 0.25, 0.05)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (-0.28, 0, 0)
            point3f urdf:collision:origin:xyz = (0, -0.2, 0.35)
            float3 urdf:geometry:box:size = (0.7, 0.5, 0.1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.35, 0, 0, 0), (0, 0.24026385957769272, -0.06908891214102844, 0), (0, 0.013817782428205689, 0.04805277191553855, 0), (0, -0.2, 0.35, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair1__tv_chair__link_0_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, -0.1, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.35, 0.3, 0.025)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, -0.1, 0)
            float3 urdf:geometry:box:size = (0.7, 0.6, 0.05)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.35, 0, 0, 0), (0, 0.3, 0, 0), (0, 0, 0.025, 0), (0, -0.1, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair1__tv_chair__link_0_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0.18, 0.65)
            quatf mujoco:geom:quat = (0.9800666, -0.19866933, 0, 0)
            vector3f mujoco:geom:size = (0.3, 0.1, 0.425)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (-0.4, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0.18, 0.65)
            float3 urdf:geometry:box:size = (0.6, 0.2, 0.85)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.3, 0, 0, 0), (0, 0.09210609940028852, -0.03894183423086505, 0), (0, 0.16550279548117644, 0.39145092245122615, 0), (0, 0.18, 0.65, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair1__tv_chair__link_0_geom_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, -0.33, 0.3)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.05, 0.225)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, -0.33, 0.3)
            float3 urdf:geometry:box:size = (0.1, 0.1, 0.45)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.05, 0, 0, 0), (0, 0.05, 0, 0), (0, 0, 0.225, 0), (0.33, -0.33, 0.3, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair1__tv_chair__link_0_geom_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.33, -0.33, 0.3)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.05, 0.225)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.33, -0.33, 0.3)
            float3 urdf:geometry:box:size = (0.1, 0.1, 0.45)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.05, 0, 0, 0), (0, 0.05, 0, 0), (0, 0, 0.225, 0), (-0.33, -0.33, 0.3, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair1__tv_chair__link_0_geom_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.33, -0.1, 0.5)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.225, 0.05)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.33, -0.1, 0.5)
            float3 urdf:geometry:box:size = (0.1, 0.45, 0.1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.05, 0, 0, 0), (0, 0.225, 0, 0), (0, 0, 0.05, 0), (-0.33, -0.1, 0.5, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair1__tv_chair__link_0_geom_collision_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, -0.1, 0.5)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.225, 0.05)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, -0.1, 0.5)
            float3 urdf:geometry:box:size = (0.1, 0.45, 0.1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.05, 0, 0, 0), (0, 0.225, 0, 0), (0, 0, 0.05, 0), (0.33, -0.1, 0.5, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "chair2__tv_chair__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (13.709712, 64.62011, 65.55413)
        float mujoco:body:inertial:mass = 176
        point3f mujoco:body:inertial:pos = (-0.69937503, 0.5700244, 0.4872159)
        quatf mujoco:body:inertial:quat = (-0.5439414, -0.45180503, -0.45180503, 0.5439414)
        point3f mujoco:body:pos = (-0.73, 0.57, 0)
        quatf mujoco:body:quat = (0.7073883, 0, 0, -0.7068252)
        point3f physics:centerOfMass = (-0.69937503, 0.5700244, 0.4872159)
        float3 physics:diagonalInertia = (13.709712, 64.62011, 65.55413)
        float physics:mass = 176
        quatf physics:principalAxes = (-0.5439414, -0.45180503, -0.45180503, 0.5439414)
        float urdf:link:inertial:inertia:ixx = 13.709712
        float urdf:link:inertial:inertia:iyy = 64.62011
        float urdf:link:inertial:inertia:izz = 65.55413
        float urdf:link:inertial:mass = 176
        float3 urdf:link:inertial:origin:rpy = (0, 1.3862619, -1.5707964)
        point3f urdf:link:inertial:origin:xyz = (-0.69937503, 0.5700244, 0.4872159)
        matrix4d xformOp:transform = ( (0.0007963267107332639, -0.9999996829318347, 0, 0), (0.9999996829318347, 0.0007963267107332639, 0, 0), (0, 0, 1, 0), (-0.73, 0.57, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "chair2__tv_chair__link_0_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, -0.2, 0.35)
            quatf mujoco:geom:quat = (0.990216, -0.13954312, 0, 0)
            vector3f mujoco:geom:size = (0.35, 0.25, 0.05)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (-0.28, 0, 0)
            point3f urdf:collision:origin:xyz = (0, -0.2, 0.35)
            float3 urdf:geometry:box:size = (0.7, 0.5, 0.1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.35, 0, 0, 0), (0, 0.24026385957769272, -0.06908891214102844, 0), (0, 0.013817782428205689, 0.04805277191553855, 0), (0, -0.2, 0.35, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair2__tv_chair__link_0_geom_collision_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, -0.1, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.35, 0.3, 0.025)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, -0.1, 0)
            float3 urdf:geometry:box:size = (0.7, 0.6, 0.05)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.35, 0, 0, 0), (0, 0.3, 0, 0), (0, 0, 0.025, 0), (0, -0.1, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair2__tv_chair__link_0_geom_collision_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0.18, 0.65)
            quatf mujoco:geom:quat = (0.9800666, -0.19866933, 0, 0)
            vector3f mujoco:geom:size = (0.3, 0.1, 0.425)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (-0.4, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0.18, 0.65)
            float3 urdf:geometry:box:size = (0.6, 0.2, 0.85)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.3, 0, 0, 0), (0, 0.09210609940028852, -0.03894183423086505, 0), (0, 0.16550279548117644, 0.39145092245122615, 0), (0, 0.18, 0.65, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair2__tv_chair__link_0_geom_collision_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, -0.33, 0.3)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.05, 0.225)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, -0.33, 0.3)
            float3 urdf:geometry:box:size = (0.1, 0.1, 0.45)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.05, 0, 0, 0), (0, 0.05, 0, 0), (0, 0, 0.225, 0), (0.33, -0.33, 0.3, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair2__tv_chair__link_0_geom_collision_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.33, -0.33, 0.3)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.05, 0.225)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.33, -0.33, 0.3)
            float3 urdf:geometry:box:size = (0.1, 0.1, 0.45)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.05, 0, 0, 0), (0, 0.05, 0, 0), (0, 0, 0.225, 0), (-0.33, -0.33, 0.3, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair2__tv_chair__link_0_geom_collision_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.33, -0.1, 0.5)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.225, 0.05)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.33, -0.1, 0.5)
            float3 urdf:geometry:box:size = (0.1, 0.45, 0.1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.05, 0, 0, 0), (0, 0.225, 0, 0), (0, 0, 0.05, 0), (-0.33, -0.1, 0.5, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "chair2__tv_chair__link_0_geom_collision_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.33, -0.1, 0.5)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.05, 0.225, 0.05)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.33, -0.1, 0.5)
            float3 urdf:geometry:box:size = (0.1, 0.45, 0.1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.05, 0, 0, 0), (0, 0.225, 0, 0), (0, 0, 0.05, 0), (0.33, -0.1, 0.5, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "tv__tv__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (36.556618, 204.61435, 236.75543)
        float mujoco:body:inertial:mass = 288
        point3f mujoco:body:inertial:pos = (-2.8020966, -1.0212728, 0.835264)
        quatf mujoco:body:inertial:quat = (0.72625893, 0.038855355, -0.68518674, -0.03946329)
        point3f mujoco:body:pos = (-2.85, -0.94, 0.035264)
        quatf mujoco:body:quat = (0.9999155, 0, 0, -0.012999634)
        point3f physics:centerOfMass = (-2.8020966, -1.0212728, 0.835264)
        float3 physics:diagonalInertia = (36.556618, 204.61435, 236.75543)
        float physics:mass = 288
        quatf physics:principalAxes = (0.72625893, 0.038855355, -0.68518674, -0.03946329)
        float urdf:link:inertial:inertia:ixx = 36.556618
        float urdf:link:inertial:inertia:iyy = 204.61435
        float urdf:link:inertial:inertia:izz = 236.75543
        float urdf:link:inertial:mass = 288
        float3 urdf:link:inertial:origin:rpy = (1.0873702, -1.4456488, -1.0882316)
        point3f urdf:link:inertial:origin:xyz = (-2.8020966, -1.0212728, 0.835264)
        matrix4d xformOp:transform = ( (0.9996620190402377, -0.025997070765676537, 0, 0), (0.025997070765676537, 0.9996620190402377, 0, 0), (0, 0, 1, 0), (-2.85, -0.94, 0.035264, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "tv__tv__link_0_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.05, -0.08, 0.8)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.15, 0.6, 0.4)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.05, -0.08, 0.8)
            float3 urdf:geometry:box:size = (0.3, 1.2, 0.8)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.15, 0, 0, 0), (0, 0.6, 0, 0), (0, 0, 0.4, 0), (0.05, -0.08, 0.8, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "tv_table__tv_table__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (25.090176, 80.428055, 96.46927)
        float mujoco:body:inertial:mass = 330
        point3f mujoco:body:inertial:pos = (-2.86, -0.93, 0.2)
        quatf mujoco:body:inertial:quat = (0.4317588, 0.5663981, -0.5318004, -0.45822033)
        point3f mujoco:body:pos = (-2.81, -0.98, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-2.86, -0.93, 0.2)
        float3 physics:diagonalInertia = (25.090176, 80.428055, 96.46927)
        float physics:mass = 330
        quatf physics:principalAxes = (0.4317588, 0.5663981, -0.5318004, -0.45822033)
        float urdf:link:inertial:inertia:ixx = 25.090176
        float urdf:link:inertial:inertia:iyy = 80.428055
        float urdf:link:inertial:inertia:izz = 96.46927
        float urdf:link:inertial:mass = 330
        float3 urdf:link:inertial:origin:rpy = (1.7799265, 0.059887044, -1.556325)
        point3f urdf:link:inertial:origin:xyz = (-2.86, -0.93, 0.2)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-2.81, -0.98, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Cube "tv_table__tv_table__link_0_geom_collision_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI", "MujocoGeomAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.05, 0.05, 0.2)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.2, 0.825, 0.25)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.05, 0.05, 0.2)
            float3 urdf:geometry:box:size = (0.4, 1.65, 0.5)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.2, 0, 0, 0), (0, 0.825, 0, 0), (0, 0, 0.25, 0), (-0.05, 0.05, 0.2, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "aruco_marker_0__aruco_marker_0__link_0" (
        prepend apiSchemas = ["UrdfLinkAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (22.453074, 22.45308, 44.90297)
        float mujoco:body:inertial:mass = 67.354454
        point3f mujoco:body:inertial:pos = (1.4999999, 1.96, 0.8)
        quatf mujoco:body:inertial:quat = (-0.6088487, -0.35958764, 0.6088487, 0.35958764)
        point3f mujoco:body:pos = (1.5, 1.96, 0.8)
        quatf mujoco:body:quat = (0.70710677, 0, 0, -0.70710677)
        point3f physics:centerOfMass = (1.4999999, 1.96, 0.8)
        float3 physics:diagonalInertia = (22.453074, 22.45308, 44.90297)
        float physics:mass = 67.354454
        quatf physics:principalAxes = (-0.6088487, -0.35958764, 0.6088487, 0.35958764)
        float urdf:link:inertial:inertia:ixx = 22.453074
        float urdf:link:inertial:inertia:iyy = 22.45308
        float urdf:link:inertial:inertia:izz = 44.90297
        float urdf:link:inertial:mass = 67.354454
        float3 urdf:link:inertial:origin:rpy = (1.5707964, -0.5038343, -1.5707964)
        point3f urdf:link:inertial:origin:xyz = (1.4999999, 1.96, 0.8)
        matrix4d xformOp:transform = ( (2.220446049250313e-16, -1, 0, 0), (1, 2.220446049250313e-16, 0, 0), (0, 0, 1, 0), (1.5, 1.96, 0.8, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "aruco_marker_0__aruco_marker_0__link_0_geom_collision_0_aruco_marker_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./../assets//meshes/usd/aruco_marker_0.usda@</aruco_marker_0>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/aruco_marker_0_0_10000000149011612_0_10000000149011612_0_10000000149011612>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.1, 0.1, 0.1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.9, 0.9, 0.9)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./../assets//meshes/stl/aruco_marker_0.stl@
            float3 urdf:geometry:mesh:scale = (0.1, 0.1, 0.1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.1, 0, 0, 0), (0, 0.1, 0, 0), (0, 0, 0.1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }
}

def Mujoco "mujoco"
{
    string mujoco:model = "isr_testbed"

    def MujocoAsset "asset"
    {
        def MujocoMesh "meshes"
        {
            def MujocoMesh "construction_cone_10_0_10_0_10_0"
            {
                asset mujoco:mesh:file = @isr_testbed/meshes/stl/construction_cone.stl@
                float3 mujoco:mesh:scale = (10, 10, 10)
            }

            def MujocoMesh "fire_hydrant"
            {
                asset mujoco:mesh:file = @isr_testbed/meshes/stl/fire_hydrant.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "pine_tree"
            {
                asset mujoco:mesh:file = @isr_testbed/meshes/stl/pine_tree.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "standing"
            {
                asset mujoco:mesh:file = @isr_testbed/meshes/stl/standing.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "plastic_cup"
            {
                asset mujoco:mesh:file = @isr_testbed/meshes/stl/plastic_cup.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "shelf_0_15000000596046448_0_20000000298023224_0_20000000298023224"
            {
                asset mujoco:mesh:file = @isr_testbed/meshes/stl/shelf.stl@
                float3 mujoco:mesh:scale = (0.15, 0.2, 0.2)
            }

            def MujocoMesh "plant_floor_small"
            {
                asset mujoco:mesh:file = @isr_testbed/meshes/stl/plant_floor_small.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "bedroom_nightstand"
            {
                asset mujoco:mesh:file = @isr_testbed/meshes/stl/bedroom_nightstand.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "cabinet_diamondback_1_7999999523162842_1_0_1_0"
            {
                asset mujoco:mesh:file = @isr_testbed/meshes/stl/cabinet_diamondback.stl@
                float3 mujoco:mesh:scale = (1.8, 1, 1)
            }

            def MujocoMesh "aruco_marker_0_0_10000000149011612_0_10000000149011612_0_10000000149011612"
            {
                asset mujoco:mesh:file = @isr_testbed/meshes/stl/aruco_marker_0.stl@
                float3 mujoco:mesh:scale = (0.1, 0.1, 0.1)
            }
        }

        def MujocoMaterial "materials"
        {
        }

        def MujocoTexture "textures"
        {
        }
    }

    def MujocoEquality "equality"
    {
    }
}


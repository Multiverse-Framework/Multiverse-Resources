#usda 1.0
(
    defaultPrim = "world"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "cube" (
    prepend apiSchemas = ["PhysicsMassAPI", "PhysicsRigidBodyAPI", "PhysxRigidBodyAPI"]
)
{
    point3f physics:centerOfMass = (0, 0, 0)
    float3 physics:diagonalInertia = (0.00005208, 0.00005208, 0.00005208)
    bool physics:kinematicEnabled = 0
    float physics:mass = 0.125
    quatf physics:principalAxes = (1, 0, 0, 0)
    bool physics:rigidBodyEnabled = 1
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "cube_geom" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MaterialBindingAPI", "PhysxConvexHullCollisionAPI"]
        prepend references = @./cube/meshes/usd/cube_mesh.usda@</cube_mesh>
    )
    {
        rel material:binding = </cube/cube_geom/Materials/cube_material>
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        color3f[] primvars:displayColor = [(1, 1, 1)]
        float[] primvars:displayOpacity = [1]
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Scope "Materials"
        {
            def Material "cube_material" (
                prepend references = @./cube/materials/usd/cube_material.usda@</cube_material>
            )
            {
            }
        }
    }
}
